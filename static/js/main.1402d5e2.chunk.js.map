{"version":3,"sources":["components/union.js","components/stockton.js","components/sansome.js","components/vanNess.js","components/broadway.js","components/transitstop.js","components/transit.js","App.js","serviceWorker.js","index.js"],"names":["Union","props","state","buss","dateParser","bind","axios","get","then","res","data","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","setState","zulu","Date","parse","toLocaleTimeString","busss","this","key","map","bus","MonitoredVehicleJourney","LineRef","className","DestinationName","MonitoredCall","AimedArrivalTime","ExpectedArrivalTime","React","Component","Stockton","Sansome","VanNess","Broadway","TransitStop","loaded","stopCode","agency","agencies","stops","stopFilter","stopsFiltered","stop","loadBusss","loadStops","updateStopFilter","e","Contents","dataObjects","ScheduledStopPoint","currentTarget","value","id","length","filtered","filter","Name","toLowerCase","includes","Id","ShortName","onClick","updateStop","console","log","StopPointName","type","onChange","updateAgency","checked","target","href","onSubmit","updateStopCode","onSelect","Transit","useState","pane","setPane","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1402d5e2.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Union extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16750`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='45'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Union\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Union;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Stockton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16513`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                if (bus.MonitoredVehicleJourney.LineRef === '30' \n                || bus.MonitoredVehicleJourney.LineRef === '45' \n                || bus.MonitoredVehicleJourney.LineRef ==='91'){\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                    )\n                }\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Stockton\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Stockton;","import React from 'react';\nimport axios from 'axios';\n\nclass Sansome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=42006`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='4'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Sansome\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Sansome;\n","import React from 'react';\nimport axios from 'axios';\n\nclass VanNess extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=40032`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Van Ness\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default VanNess;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Broadway extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=13082`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n               \tBroadWay\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Broadway;\n","import React from 'react';\nimport axios from 'axios';\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            stopCode: '16513',\n            agency: 'SF',\n            buss: [],\n            agencies: [],\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stop: {}\n        }\n        this.dateParser = this.dateParser.bind(this)\n        this.loadBusss = this.loadBusss.bind(this);\n        this.loadStops = this.loadStops.bind(this);\n        this.updateStopFilter = this.updateStopFilter.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n        axios.get(`https://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            let agencies = res.data;\n            this.setState({ agencies });\n        })\n    }\n\n    loadBusss(e) {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n    loadStops(e) {\n        this.setState({ loaded: true })\n        axios.get(`https://api.511.org/transit/stops?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&operator_id=${this.state.agency}`)\n            .then(res => {\n                let stops = res.data.Contents.dataObjects.ScheduledStopPoint;\n                this.setState({ stops, stopsFiltered: stops });\n            })\n    }\n\n    //http://api.511.org/transit/stoptimetable?api_key={your-key}&MonitoringRef=13008&OperatorRef=SF\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n    updateStopCode() {\n        return e => this.setState({\n            stopCode: e.currentTarget.value\n        })\n    }\n    updateAgency() {\n        return e => this.setState({\n            agency: e.currentTarget.value\n        })\n    }\n    updateStop() {\n        return e => this.setState({\n            stopCode: this.state.stopsFiltered[e.currentTarget.value].id,\n            stop: this.state.stopsFiltered[e.currentTarget.value]\n        })\n    }\n    updateStopFilter() {\n        return e => {\n            // if (e.currentTarget.value.length === 0){\n            //     this.setState({\n            //         stopFilter: e.currentTarget.value,\n            //         stopsFiltered: this.state.stops\n            //     })\n            // }\n            if (e.currentTarget.value.length < 2){\n                this.setState({\n                    stopFilter: e.currentTarget.value,\n                    // stopsFiltered: this.state.stops\n                })\n            }\n            else if (e.currentTarget.value.length <= this.state.stopFilter.length){\n                let filtered = this.state.stops//.filter(stop => stop.Name.toLowerCase().includes(e.currentTarget.value.toLowerCase()))\n                this.setState({\n                    stopFilter: e.currentTarget.value,\n                    stopsFiltered: filtered\n                })\n            }  \n            else {\n                let filtered = this.state.stopsFiltered.filter(stop => stop.Name.toLowerCase().includes(e.currentTarget.value.toLowerCase()))\n                this.setState({\n                    stopFilter: e.currentTarget.value,\n                    stopsFiltered: filtered\n                })\n            }\n    }\n    }\n\n    render() {\n        let busss = <div>No Tracked Vehicles</div>\n        let stop\n        let stops\n        let agencies\n        if (this.state.agencies){\n            agencies = this.state.agencies.map(agency => {\n                let key = 0\n                return (\n                        <option value={agency.Id} key={key++}> \n {agency.ShortName?agency.ShortName:agency.Name} {agency.ShortName&&agency.ShortName!==agency.Name?`(${agency.Name})`:''}\n                         </option> \n                )\n            })\n        }\n        if (this.state.stopsFiltered){\n            //\n            let key = 0\n            stops = this.state.stopsFiltered.map(stop => {\n                return (\n                        <option key={key} value={key++} onClick={this.updateStop()}>\n                            {stop.Name} ({stop.id})\n                        </option>\n                )\n            })\n        }\n        if (this.state.buss){\n            console.log(this.state.buss[0])\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                stop = bus.MonitoredVehicleJourney.MonitoredCall.StopPointName\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })   \n        }\n        return (\n            <div className = \"stop\" >\n            <div className=\"stop-left\">\n                ShortList:\n                <br></br>                \n                <label id=\"sf\"><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"SF\"} value=\"SF\" />SF Muni</label>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"AC\"} value=\"AC\" />AC Transit</label>\n                <br></br>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"GG\"} value=\"GG\" />Golden Gate Transit</label>\n\n            \n            <div className=\"agencies-string\">\n                All {this.state.agencies.length} Transit Agencies:\n                <span className=\"politics\">\n   (Too many! <a target=\"_blank\" href=\"https://www.seamlessbayarea.org/\">AB2057</a>)\n            </span>\n                </div>\n                \n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                >\n                    {agencies}\n                </select>\n            <button className=\"load-stops\" onClick={this.loadStops}>Load Stops</button>\n            <div className=\"slow\">\n                {\n                (this.state.loaded)\n                ? <div>Loading.....Muni has ~3500 stops, <br></br>ACTransit more than 5000.</div>\n                : <div></div>\n                }\n            </div>\n            Live Filter: \n                <input type=\"text\"\n                    value={this.state.stopFilter}\n                    onChange={this.updateStopFilter()}\n                    className=\"stop-filter\"\n                />\n                <br></br>\n            <select\n                className=\"stop-select\"\n                // value={this.state.stop.Id}\n                onChange={this.updateStop()}\n            >\n                {stops}\n            </select>            \n            <form onSubmit={this.loadBusss}>\n                Stop ID:\n                <input type=\"text\"\n                    value={this.state.stopCode}\n                    onChange={this.updateStopCode()}\n                    onSelect={this.updateStopCode()}\n                    className=\"stop-id\"\n                />\n                <input type=\"submit\" value=\"Update Arrivals\" />\n                <br></br>\n            </form>\n            </div>\n            <div className=\"stop-right\">\n                { stop }\n                { busss }\n            </div>\n            </div>\n        );\n    }\n\n}\nexport default TransitStop;\n","import React, { useState } from 'react';\nimport Union from './union';\nimport Stockton from './stockton';\nimport Sansome from './sansome';\nimport VanNess from './vanNess';\nimport Broadway from './broadway';\nimport TransitStop from './transitstop';\n\nfunction Transit() {\n  let [pane, setPane] = useState('marin');\n  return (\n    <div className=\"transit-master\">\n      <div className=\"transit-switcher\">\n        <div className=\"busemoji\">🚌</div>\n        <div id='marin' className={pane === 'marin' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('marin')}>MARIN</div>\n        <div className={pane === 'frisco' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('frisco')}>FRISCO</div>\n        <div className={pane === 'user' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('user')}>USER</div>\n      </div>\n    <div className=\"transit\">\n        <div className={pane === 'marin' ? 'transit-on' : 'transit-off'} >\n          <Sansome />\n          <VanNess />\n      </div>\n        <div className={pane === 'frisco' ? 'transit-on' : 'transit-off'}>\n          <Stockton />\n          <Union />\n          <Broadway />\n      </div>\n      <div className={pane === 'user' ? 'transit-on' : 'transit-off'}>\n          <TransitStop />\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Transit;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Transit from './components/transit'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route exact path=\"/transit\" component={Transit} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}