{"version":3,"sources":["components/bus.js","components/anyStop.js","components/transitstop.js","components/transit.js","components/anyStopWildCard.js","components/aa.js","App.js","serviceWorker.js","index.js"],"names":["Bus","props","bus","MonitoredVehicleJourney","OperatorRef","className","id","LineRef","OriginName","DestinationName","MonitoredCall","ExpectedArrivalTime","Date","parse","AimedArrivalTime","toLocaleTimeString","includes","title","VehicleRef","to","pathname","state","vehicleNumber","agency","AnyStop","buss","loadBusss","bind","this","axios","get","stop","then","res","data","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","setState","stopName","busss","onClick","StopPointName","key","map","React","Component","TransitStop","selectID","e","target","select","loaded","stopCode","agencies","stopLists","stops","stopFilter","stopsFiltered","Name","loadStops","updateStopFilter","agencyCodeLengthMap","document","filter","WebSite","currentTarget","value","Contents","dataObjects","ScheduledStopPoint","toUpperCase","console","log","length","searchTerms","toLowerCase","split","push","stoppCode","slow","Id","ShortName","type","onChange","updateAgency","checked","href","rel","onMouseDown","disabled","updateStop","selected","hidden","placeholder","onFocus","updateStopCode","Transit","useState","pane","setPane","role","aria-label","src","alt","AnyStopWildCard","match","params","window","location","reload","withRouter","AA","App","basename","process","exact","path","component","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef3bedae.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Bus(props) {\nif (props.bus.MonitoredVehicleJourney.OperatorRef === \"BA\") {\n    return (\n            <div className=\"bus\" id={props.bus.MonitoredVehicleJourney.LineRef}><div>\n    <span>{props.bus.MonitoredVehicleJourney.OriginName}</span>\n    <span className=\"bold\"> => {props.bus.MonitoredVehicleJourney.DestinationName}</span>\n            </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n        ? <>\n        <span className=\"gray\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>\n<span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n        </span>\n        </>\n        : <span className=\"bold\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n    </div>\n    )} else if (['SF', 'AC', 'GG', 'SM', 'MA', 'SC'].includes(props.bus.MonitoredVehicleJourney.OperatorRef)){\n        return(\n        <div className=\"bus\">\n            <div><span title=\"Track Vehicle\" className=\"bold\">\n        { props.bus.MonitoredVehicleJourney.VehicleRef\n        ? <Link className=\"gps\"\n                to={{\n                pathname: \"/vehicular\", \n                state: {\n        vehicleNumber: props.bus.MonitoredVehicleJourney.VehicleRef,\n        agency: props.bus.MonitoredVehicleJourney.OperatorRef\n                        }\n                }} >\n        {props.bus.MonitoredVehicleJourney.LineRef}<sup>GPS</sup>\n        </Link>\n        : <>{props.bus.MonitoredVehicleJourney.LineRef}</>\n        } => </span> \n        {props.bus.MonitoredVehicleJourney.DestinationName} \n        </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n        ? <>\n        <span className=\"gray\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>\n<span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n        </span>\n        </>\n        : <span className=\"bold\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n    </div>\n    )} else {\n        return(\n        <div className=\"bus\">\n            <div><span className=\"bold\">\n{props.bus.MonitoredVehicleJourney.LineRef} => </span> \n{props.bus.MonitoredVehicleJourney.DestinationName} \n        </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n        ? <>\n        <span className=\"gray\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>\n<span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n        </span>\n        </>\n        : <span className=\"bold\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n    </div>\n    )}\n}\nexport default Bus;\n\n","import React from 'react';\nimport axios from 'axios';\nimport Bus from './bus'\n\nclass AnyStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadBusss()\n    }\n    loadBusss() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.props.agency}&stopCode=${this.props.stop}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    render() {\n        let busss = <div className=\"bus\">\n            No Tracked Vehicles to show. \n            <br></br>\n            <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n        </div>\n        let stopName\n        if (this.state.buss[0]){\n            stopName = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                return <Bus bus={bus} key={key++} /> \n            })   \n        }\n        return (\n            <div className=\"buss\">\n                 {this.props.title \n                ? this.props.title\n                : stopName}\n                <br></br>\n                {busss}\n            </div>\n        );\n    }\n}\nexport default AnyStop;","import React from 'react';\nimport axios from 'axios';\nimport Bus from './bus'\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            stopCode: 'EMBR',\n            agency: 'BA',\n            agencies: [],\n            stopLists: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stop: { Name: 'Embarcadero' },\n            buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this);\n        this.loadStops = this.loadStops.bind(this);\n        this.updateStopFilter = this.updateStopFilter.bind(this)\n        this.selectID = this.selectID.bind(this)\n        this.agencyCodeLengthMap = {\n            'AM': 3, 'PE': 3, 'VC': 3, \n            'BA': 4, 'EM': 4, 'SA': 4, \n            'AC': 5, 'CT': 5, 'CC': 5, \n            'DE': 5, 'FS': 5, 'GF': 5, \n            'GG': 5, 'MA': 5, 'RV': 5, \n            'SC': 5, 'SF': 5, 'SR': 5, \n            'UC': 5, 'VN': 5, 'WC': 5, \n            'SS': 6, 'WH': 6, 'SM': 6, \n            'ST': 6, 'TD': 6, '3D': 6, \n            'CE': 7, 'CM': 7, 'SO': 7\n        }\n    }\n    selectID = (e) => e.target.select();\n\n    componentDidMount() {\n        document.title=\"transitYourself - anywherer\"\n        axios.get(`https://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            let agencies = res.data.filter(agency => !!agency.WebSite);\n            this.setState({ agencies });\n        })\n        this.loadBusss()\n    }\n    loadBusss(e, agency = this.state.agency, stopCode = this.state.stopCode) {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${agency}&stopCode=${stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    //loadSched(api=https://api.511.org/transit/stoptimetable?api_key={your-key}&MonitoringRef=13008&OperatorRef=SF\n\n    updateAgency() {\n        return e =>     {\n            let agency = e.currentTarget.value\n            let stops = []\n            let stop\n        if (this.state.stopLists[agency]) {\n            stops = this.state.stopLists[agency]\n            stop = stops[0]\n            this.setState({\n                stopFilter: '',\n                stopsFiltered: stops,\n                stopCode: stop.id,\n                buss: [],\n                loaded: true,\n                stop,\n                stops,\n                agency\n        })\n        this.loadBusss( e, agency, stop.id )\n    } else {\n        this.setState({\n            agency: e.currentTarget.value,\n            stop: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stopCode: '',\n            buss: [],\n            loaded: false\n            })\n            }\n        }\n    }    \n    loadStops(e) {\n        this.setState({ loaded: true })\n        axios.get(`https://api.511.org/transit/stops?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&operator_id=${this.state.agency}`)\n            .then(res => {\n                if (this.state.agency === \"BA\") {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint.filter(stop => !stop.id.includes('place') && !stop.Name.includes('Enter/Exit :'))\n                    let stopCode = this.state.stopCode || 'EMBR'\n                    let stop = stops.filter(stop => stop.id === stopCode.toUpperCase())[0] || stops.filter(stop => stop.id === 'EMBR')[0]\n                    this.setState({\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists: {'BA': stops},\n                        stopCode: stop.id,\n                        stops,\n                        stop\n                    });\n                    this.loadBusss( e, this.state.agency, stop.id )\n                }\n                else {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint;\n                    let stop = stops.filter(stop => stop.id === this.state.stopCode.toUpperCase())[0] || stops[0]\n                    let stopLists = this.state.stopLists\n                    stopLists[this.state.agency] = stops\n                    this.setState({\n                        stopCode: stop.id,\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists,\n                        stops,\n                        stop\n                    });\n                    this.loadBusss( e, this.state.agency, stop.id )\n                }\n            })\n    }    \n    updateStop() {\n        return e => {\n            let stop = this.state.stopsFiltered[e.currentTarget.value]\n                console.log(stop)\n                this.setState({\n                    stopCode: stop.id,\n                    stop\n                })\n            this.loadBusss( e, this.state.agency, stop.id )\n        }\n    }\n    updateStopFilter() {\n        return e => {\n            let stopFilter = e.currentTarget.value\n            if (stopFilter.length === 1) {\n                this.setState({\n                    stopsFiltered: this.state.stops,\n                })\n            }\n            if (stopFilter.length < 3) {\n                this.setState({\n                    stopFilter\n                })\n            }\n            else if (stopFilter.length <= this.state.stopFilter.length) {\n                let stopsFiltered = this.state.stops\n                this.setState({\n                    stopFilter,\n                    stopsFiltered\n                })\n            }\n            else if (stopFilter.length >= 3) {\n                this.setState({ stopFilter })\n                let searchTerms = stopFilter.toLowerCase().split(\" \")\n                searchTerms.push(\"\")\n                searchTerms.push(\"\")\n                searchTerms.push(\"\")\n                let stopsFiltered = this.state.stopsFiltered.filter(stop => {\n                    let stopName = stop.Name.toLowerCase()\n                    if (stopName.includes(searchTerms[0]) \n                    && stopName.includes(searchTerms[1]) \n                    && stopName.includes(searchTerms[2]) \n                    && stopName.includes(searchTerms[3]))\n                    {return true} else {return false}\n                })\n                this.setState({ stopsFiltered })\n                if (stopsFiltered[0]) {\n                    let stop = stopsFiltered[0]\n                    if (this.state.stopCode !== stop.id) {\n                        console.log(stop)\n                        this.setState({\n                            stopCode: stop.id,\n                            stop\n                        })\n                        this.loadBusss( e, this.state.agency, stop.id )\n                    }\n                }\n            }\n        }\n    }\n    updateStopCode() {\n        return e => {\n            let stopCode = e.currentTarget.value\n            let stoppCode = stopCode.toUpperCase()\n            if (stopCode.length <= this.agencyCodeLengthMap[this.state.agency]) {\n            this.setState({\n                stopCode\n            })}\n            if (stopCode.length === this.agencyCodeLengthMap[this.state.agency]) {\n            let stop = this.state.stops.filter(stop => stop.id.toUpperCase() === stoppCode)[0]\n                if (stop) {\n                    console.log(stop)\n                    this.setState({\n                        stopsFiltered: this.state.stops,\n                        stopFilter: '',\n                        stopCode: stoppCode,\n                        stop\n                    })\n                } else {\n                    this.setState({\n                        stop: {},\n                    })\n                }\n                axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stoppCode}`)\n                .then(res => {\n                    let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({  buss })\n                    if (buss[0]) {this.setState({ stopCode: stoppCode })}\n                })         \n            }\n        }\n    }\n    render() {\n        let slow\n            if (this.state.loaded && !this.state.stops[0]) {\n                slow = <div><span>Muni and the VTA have <span className=\"stops-number\">~3500</span> stops,</span><br></br><span>ACTransit more than <span className=\"stops-number\">5000</span>.</span></div>\n            }\n            else if (this.state.loaded && this.state.stops[0] && this.state.stopFilter) {\n                slow = <div>\n                        Loaded <span className=\"stops-number\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                            {this.state.stopsFiltered.length===this.state.stops.length\n                            ?''\n                            :<><span className=\"stops-number\">{this.state.stopsFiltered.length}</span> in Filter.</>\n                            }\n                    </div>\n            }\n            else if (this.state.loaded && this.state.stops[0]) {\n                slow = <div>\n                        Loaded <span className=\"stops-number\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                    </div>\n            }\n\n        let agencies\n        if (this.state.agencies) {\n            let key = 0\n            agencies = this.state.agencies.map(agency => {\n                return (\n                        <option value={agency.Id} key={key++}>\n                            {agency.ShortName\n                            ? agency.ShortName\n                            : agency.Name} {\n                            agency.ShortName && agency.ShortName !== agency.Name\n                            ? `(${agency.Name})`\n                            : ''}\n                         </option>\n                )\n            })\n        }\n        let stops\n        if (this.state.stopsFiltered) {\n            let key = 0\n            stops = this.state.stopsFiltered.map(stop => {\n                return (\n                        <option key={key} value={key++}>\n                            {stop.Name} ({stop.id})\n                        </option>\n                )\n            })\n        }\n        let stopName = ''\n        let busss = <div className=\"bus\">\n                No Tracked Vehicles.\n                <br></br>\n                <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n            </div>\n        if (this.state.buss[0]) {\n            stopName = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0\n            busss = this.state.buss.map(bus => { \n                return <Bus bus={bus} key={key++} /> \n            })\n        }\n        return (\n            <div className = \"stop\">\n                <div className=\"agency-upper\">\n                <div className=\"radios\">\n            <div className=\"short-title\">Agency ShortList:</div>\n                <div className=\"radio-one\">\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"SF\"} \n                        value=\"SF\" />SF</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"GG\"} \n                        value=\"GG\" />GG</label>\n                    <label>&nbsp;&nbsp;&nbsp;<input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency === \"BA\"} \n                        value=\"BA\" />Bart</label>\n                </div>\n                <div className=\"radio-two\">\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"AC\"} \n                        value=\"AC\" />AC</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency === \"SM\"} \n                        value=\"SM\" />Sam</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"MA\"} \n                        value=\"MA\" />Marin</label>\n                </div>\n                </div>\n            <span className=\"agency-code\">{this.state.agency}</span>\n\t\t    </div>\n            <div className=\"agencies-string\">\n                All {this.state.agencies.length} Transit Agencies:\n                <div className=\"politics\">\n(too many? i agree! <a href=\"https://www.seamlessbayarea.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\nSeamless Bay Area</a>)\n            </div>\n                </div>\n            <div className=\"agency\">\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                    onMouseDown={this.updateAgency()}\n                >\n                    {agencies}\n                </select>\n            </div>\n            <hr></hr>\n            <div className=\"slow\">\n            {!this.state.loaded\n            ? <button className=\"load-stops\" onClick={this.loadStops}>Load Stops</button>\n            : this.state.stops[0]\n            ?  <button disabled className=\"stop-loads\" >Loaded</button>\n            : <button disabled className=\"stop-loading\" >Loading</button>\n            }\n                {slow}\n            </div>\n                <select\n                disabled={!this.state.stopsFiltered[0]}\n                className=\"stop-select\"\n                onChange={this.updateStop()}\n                >\n                    {this.state.stop.id\n                    ? <option selected disabled hidden value='0'>{this.state.stop.Name} ({this.state.stop.id})</option>\n                    :''}\n                    {this.state.stop.id}\n                {stops}\n            </select>\n            <br></br>\n                <input type=\"text\"\n                    value={this.state.stopFilter}\n                    className=\"stop-filter\"\n                    onChange={this.updateStopFilter()}\n                    disabled={!this.state.loaded}\n                    placeholder={this.state.loaded?\"Type to Search\":\"No Stops Loaded\"}\n                    //onPaste={}\n                />\n                <br></br>\n            <div className=\"stop-info\">\n                <span className=\"stop-title\">\n                { this.state.stop.Name\n                ? this.state.stop.Name\n                : stopName }\n                </span>\n            <input type=\"text\"\n                    id=\"stop-id\"\n                    placeholder=\"Stop Code\"\n                    value={this.state.stopCode}\n                    onFocus={this.selectID}\n                    onChange={this.updateStopCode()}\n                />\n\n\n\t\t</div>\n                { busss }\n            </div>\n        );\n    }\n}\nexport default TransitStop;\n","import React, { useState } from 'react';\nimport AnyStop from './anyStop';\nimport TransitStop from './transitstop';\nimport { Link } from 'react-router-dom';\n\n\n\nfunction Transit() {\n  let [pane, setPane] = useState('user');\n  document.title=\"transitYourself\"\n  return (\n    <div className=\"transit-master\">\n      <div className=\"transit-switcher\">\n        <div className=\"busemoji\">\n            <Link to= \"/vehicular\" >\n            <span title=\"Vehicle Tracker\" role=\"img\" aria-label=\"bus emoji\">🚌</span>\n            </Link>\n        </div>\n        <div className={\n          pane === 'frisco' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n          } onClick={() => setPane('frisco')}>Commuter</div>\n        <div id='marin' className={\n          pane === 'marin' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'} onClick={() => setPane('marin')}>Weekender</div>\n        <div className={\n          pane === 'user' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'} onClick={() => setPane('user')}>Anywherer</div>\n        <div className=\"five-eleven\">\n          <a href=\"https://511.org/open-data/transit\" title=\"powered by 511 open data\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img className=\"five-eleven\" src=\"https://proxy-prod.511.org/assets/img/branding/511_original_web.png\" alt=\"511 logo\">\n            </img>\n          </a>\n        </div>\n      </div>\n      <div className=\"transit\">\n          <div className={pane === 'marin' ? 'transit-on' : 'transit-off'} >\n            <br></br>\n            {pane === 'marin' \n            ? <>\n            <AnyStop agency=\"GG\" stop=\"42006\" />\n            <AnyStop title=\"Van Sess\" agency=\"GG\" stop=\"40032\" />\n            </> \n            : ''}\n          </div>\n          <div className={pane === 'frisco' ? 'transit-on' : 'transit-off'}>\n          <br></br>\n            {pane === 'frisco' \n            ? <>\n            <AnyStop agency=\"SF\" stop=\"16513\" />\n            <AnyStop agency=\"SF\" stop=\"16750\" />\n            <AnyStop title=\"BroadWay\" agency=\"SF\" stop=\"13082\" />\n            </>\n            : ''}\n          </div> \n          <div className={pane === 'user' ? 'transit-on' : 'transit-off'}>\n            <TransitStop />\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Transit;\n","import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Bus from './bus';\n\nclass AnyStopWildCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.props.match.params.agency.toUpperCase()}&stopCode=${this.props.match.params.stop.toUpperCase()}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n    // componentDidUpdate() {\n    //     axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.props.match.params.agency.toUpperCase()}&stopCode=${this.props.match.params.stop.toUpperCase()}`)\n    //         .then(res => {\n    //             let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n    //             this.setState({ buss });\n    //         })\n    // }\n\n    render() {\n        let busss = <div className=\"bus\">\n            No Tracked Vehicles to show. \n            <br></br>\n            <span className='update' onClick={() => window.location.reload(false)}>Check again</span>, check your inputs, or check the schedule.\n        </div>\n        let stop\n        if (this.state.buss[0]){\n            stop = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                return <Bus bus={bus} key={key++} />\n            })   \n        }\n        return (\n        <div className=\"transit-master\">\n        <div className=\"transit-switcher\">\n        <div className=\"busemoji\">\n      </div>\n      <div className=\"transit\">\n        <div className='transit-on'>\n        {this.props.match.params.stop.toUpperCase()}\n            <div className=\"buss\">\n                <span className=\"bold\">\n                    {stop}\n                </span>\n                    {busss}\n            </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        );\n    }\n\n}\nexport default withRouter(AnyStopWildCard);","import React from 'react';\nimport AnyStop from './anyStop';\n\nfunction AA() {\n  return (\n    <div className=\"transit-master\">\n    <div className=\"transit-switcher\">\n      <div className=\"busemoji\">\n      </div>\n      <div className=\"transit\">\n        <div className='transit-on'>\n            <AnyStop title='Twenty Fourth Street BART' agency='BA' stop='24TH' />\n            <AnyStop title='Millbrae BART' agency='BA' stop='MLBR' />\n            <AnyStop title='CalTrain MillBrae' agency='CT' stop='70062' />\n            <AnyStop title='CalTrain San Mateo' agency='CT' stop='70091' />\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default AA;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Transit from './components/transit';\nimport AnyStopWildCard from './components/anyStopWildCard';\nimport AA from './components/aa';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={Transit} />\n        <Route path=\"/anystop/:agency/:stop\" render={(props) => (\n        <AnyStopWildCard {...props} /> )}\n      />\n        <Route exact path=\"/aa\" component={AA} />\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}