{"version":3,"sources":["components/union.js","components/stockton.js","components/sansome.js","components/vanNess.js","components/broadway.js","components/transitstop.js","components/transit.js","App.js","serviceWorker.js","index.js"],"names":["Union","props","state","buss","dateParser","bind","axios","get","then","res","data","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","setState","zulu","Date","parse","toLocaleTimeString","busss","this","key","map","bus","MonitoredVehicleJourney","LineRef","className","DestinationName","MonitoredCall","AimedArrivalTime","ExpectedArrivalTime","React","Component","Stockton","Sansome","VanNess","Broadway","TransitStop","stopCode","agency","agencies","handleSubmit","e","currentTarget","value","stop","Id","ShortName","Name","StopPointName","type","onChange","updateAgency","checked","length","onSubmit","updateStopCode","Transit","useState","pane","setPane","id","onClick","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gUAiDeA,E,YA7CX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,IAEV,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBALD,E,iFAQE,IAAD,OAChBC,IAAMC,IAAN,gIACCC,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,c,iCAIbY,GACP,OAAO,IAAIC,KAAKA,KAAKC,MAAMF,IAAOG,uB,+BAG5B,IACFC,EADC,OAEL,GAAIC,KAAKlB,MAAMC,KAAK,CAChB,IAAIkB,EAAM,EACVF,EAAQC,KAAKlB,MAAMC,KAAKmB,KAAI,SAAAC,GACxB,GAA0C,OAAtCA,EAAIC,wBAAwBC,QAChC,OACI,yBAAKC,UAAU,MAAML,IAAKA,KACtB,0BAAMK,UAAU,QAAQH,EAAIC,wBAAwBC,SADxD,OAC4EF,EAAIC,wBAAwBG,gBACpG,6BACA,0BAAMD,UAAU,SAAS,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcC,mBAHvF,OAGoH,0BAAMH,UAAU,YAAY,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcE,0BAMtN,OACI,yBAAKJ,UAAU,QAAf,QAEKP,O,GAxCGY,IAAMC,WCgDXC,E,YA/CX,WAAYhC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACVC,KAAM,IAET,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBALD,E,iFAQE,IAAD,OAChBC,IAAMC,IAAN,gIACKC,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,c,iCAIjBY,GACP,OAAO,IAAIC,KAAKA,KAAKC,MAAMF,IAAOG,uB,+BAG5B,IACFC,EADC,OAEL,GAAIC,KAAKlB,MAAMC,KAAK,CAChB,IAAIkB,EAAM,EACVF,EAAQC,KAAKlB,MAAMC,KAAKmB,KAAI,SAAAC,GACxB,GAA4C,OAAxCA,EAAIC,wBAAwBC,SACW,OAAxCF,EAAIC,wBAAwBC,SACW,OAAvCF,EAAIC,wBAAwBC,QAC/B,OACI,yBAAKC,UAAU,MAAML,IAAKA,KACtB,0BAAMK,UAAU,QAAQH,EAAIC,wBAAwBC,SADxD,OAC4EF,EAAIC,wBAAwBG,gBACpG,6BACA,0BAAMD,UAAU,SAAS,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcC,mBAHvF,OAGoH,0BAAMH,UAAU,YAAY,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcE,0BAMtN,OACI,yBAAKJ,UAAU,QAAf,WAEKP,O,GA1CMY,IAAMC,WC8CdE,E,YA7CX,WAAYjC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,IAEV,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBALD,E,iFAQE,IAAD,OAChBC,IAAMC,IAAN,gIACKC,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,c,iCAIjBY,GACP,OAAO,IAAIC,KAAKA,KAAKC,MAAMF,IAAOG,uB,+BAG5B,IACFC,EADC,OAEL,GAAIC,KAAKlB,MAAMC,KAAK,CAChB,IAAIkB,EAAM,EACVF,EAAQC,KAAKlB,MAAMC,KAAKmB,KAAI,SAAAC,GACxB,GAA0C,MAAtCA,EAAIC,wBAAwBC,QAChC,OACI,yBAAKC,UAAU,MAAML,IAAKA,KACtB,0BAAMK,UAAU,QAAQH,EAAIC,wBAAwBC,SADxD,OAC4EF,EAAIC,wBAAwBG,gBACpG,6BACA,0BAAMD,UAAU,SAAS,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcC,mBAHvF,OAGoH,0BAAMH,UAAU,YAAY,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcE,0BAMtN,OACI,yBAAKJ,UAAU,QAAf,UAEKP,O,GAxCKY,IAAMC,WC6CbG,E,YA5CX,WAAYlC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,IAGV,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBAND,E,iFASE,IAAD,OAChBC,IAAMC,IAAN,gIACCC,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,c,iCAIbY,GACP,OAAO,IAAIC,KAAKA,KAAKC,MAAMF,IAAOG,uB,+BAG5B,IACFC,EADC,OAEL,GAAIC,KAAKlB,MAAMC,KAAK,CAChB,IAAIkB,EAAM,EACVF,EAAQC,KAAKlB,MAAMC,KAAKmB,KAAI,SAAAC,GACxB,OACI,yBAAKG,UAAU,MAAML,IAAKA,KACtB,0BAAMK,UAAU,QAAQH,EAAIC,wBAAwBC,SADxD,OAC4EF,EAAIC,wBAAwBG,gBACpG,6BACA,0BAAMD,UAAU,SAAS,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcC,mBAHvF,OAGoH,0BAAMH,UAAU,YAAY,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcE,0BAKtN,OACI,yBAAKJ,UAAU,QAAf,WAEKP,O,GAvCKY,IAAMC,WC6CbI,E,YA5CX,WAAYnC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,IAGV,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBAND,E,iFASE,IAAD,OAChBC,IAAMC,IAAN,gIACCC,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,c,iCAIbY,GACP,OAAO,IAAIC,KAAKA,KAAKC,MAAMF,IAAOG,uB,+BAG5B,IACFC,EADC,OAEL,GAAIC,KAAKlB,MAAMC,KAAK,CAChB,IAAIkB,EAAM,EACVF,EAAQC,KAAKlB,MAAMC,KAAKmB,KAAI,SAAAC,GACxB,OACI,yBAAKG,UAAU,MAAML,IAAKA,KACtB,0BAAMK,UAAU,QAAQH,EAAIC,wBAAwBC,SADxD,OAC4EF,EAAIC,wBAAwBG,gBACpG,6BACA,0BAAMD,UAAU,SAAS,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcC,mBAHvF,OAGoH,0BAAMH,UAAU,YAAY,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcE,0BAKtN,OACI,yBAAKJ,UAAU,QAAf,WAEKP,O,GAvCMY,IAAMC,WC4HdK,E,YA3HX,WAAYpC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToC,SAAU,QACVC,OAAQ,KACRpC,KAAM,GACNqC,SAAU,IAEd,EAAKpC,WAAW,EAAKA,WAAWC,KAAhB,gBAChB,EAAKoC,aAAe,EAAKA,aAAapC,KAAlB,gBATL,E,iFAaE,IAAD,OAChBC,IAAMC,IAAN,qHAAwHa,KAAKlB,MAAMqC,OAAnI,qBAAsJnB,KAAKlB,MAAMoC,WAChK9B,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,YAEpBG,IAAMC,IAAN,kGACCC,MAAK,SAAAC,GACF,IAAI+B,EAAW/B,EAAIC,KACnB,EAAKI,SAAS,CAAE0B,kB,mCAIXE,GAAI,IAAD,OACZpC,IAAMC,IAAN,oHAAuHa,KAAKlB,MAAMqC,OAAlI,qBAAqJnB,KAAKlB,MAAMoC,WAC3J9B,MAAK,SAAAC,GACF,IAAIN,EAAOM,EAAIC,KAAKC,gBAAgBC,uBAAuBC,mBAC3D,EAAKC,SAAS,CAAEX,c,iCAIjBY,GACP,OAAO,IAAIC,KAAKA,KAAKC,MAAMF,IAAOG,uB,uCAGpB,IAAD,OACb,OAAO,SAAAwB,GAAC,OAAI,EAAK5B,SAAS,CACtBwB,SAAUI,EAAEC,cAAcC,W,qCAGlB,IAAD,OACX,OAAO,SAAAF,GAAC,OAAI,EAAK5B,SAAS,CACtByB,OAAQG,EAAEC,cAAcC,W,+BAKtB,IACFzB,EACA0B,EACAL,EAHC,OAaL,GATIpB,KAAKlB,MAAMsC,WACXA,EAAWpB,KAAKlB,MAAMsC,SAASlB,KAAI,SAAAiB,GAC/B,OACQ,4BAAQK,MAAOL,EAAOO,IAC5CP,EAAOQ,UAAUR,EAAOQ,UAAUR,EAAOS,KADnB,IAC0BT,EAAOQ,WAAWR,EAAOQ,YAAYR,EAAOS,KAA5C,WAAqDT,EAAOS,KAA5D,KAAoE,QAK1G5B,KAAKlB,MAAMC,KAAK,CAChB,IAAIkB,EAAM,EACVF,EAAQC,KAAKlB,MAAMC,KAAKmB,KAAI,SAAAC,GAExB,OADAsB,EAAOtB,EAAIC,wBAAwBI,cAAcqB,cAE7C,yBAAKvB,UAAU,MAAML,IAAKA,KACtB,0BAAMK,UAAU,QAAQH,EAAIC,wBAAwBC,SADxD,OAC4EF,EAAIC,wBAAwBG,gBACpG,6BACA,0BAAMD,UAAU,SAAS,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcC,mBAHvF,OAGoH,0BAAMH,UAAU,YAAY,EAAKtB,WAAWmB,EAAIC,wBAAwBI,cAAcE,0BAKtN,OACI,yBAAKJ,UAAY,YACjB,yBAAKA,UAAU,aAEX,6BAFJ,oBAKI,6BACA,+BAAO,2BAAOwB,KAAK,QAAQC,SAAU/B,KAAKgC,eAAgBC,QAA6B,OAApBjC,KAAKlB,MAAMqC,OAAeK,MAAM,OAAnG,WACA,+BAAO,2BAAOM,KAAK,QAAQC,SAAU/B,KAAKgC,eAAgBC,QAA6B,OAApBjC,KAAKlB,MAAMqC,OAAeK,MAAM,OAAnG,uBACA,6BACA,+BAAO,2BAAOM,KAAK,QAAQC,SAAU/B,KAAKgC,eAAgBC,QAA6B,OAApBjC,KAAKlB,MAAMqC,OAAeK,MAAM,OAAnG,cACA,+BAAO,2BAAOM,KAAK,QAAQC,SAAU/B,KAAKgC,eAAgBC,QAA6B,OAApBjC,KAAKlB,MAAMqC,OAAeK,MAAM,OAAnG,iBACJ,6BACA,6BAZA,kBAcgBxB,KAAKlB,MAAMsC,SAASc,OAdpC,uBAeI,6BACA,4BACI5B,UAAU,gBACVkB,MAAOxB,KAAKlB,MAAMqC,OAClBY,SAAU/B,KAAKgC,gBAEdZ,GAET,0BAAMe,SAAUnC,KAAKqB,cAArB,WAEI,6BACA,2BAAOS,KAAK,OACRN,MAAOxB,KAAKlB,MAAMoC,SAClBa,SAAU/B,KAAKoC,iBACf9B,UAAU,YAEd,6BACA,2BAAOwB,KAAK,SAASN,MAAM,WAC3B,+BAGJ,yBAAKlB,UAAU,cACTmB,EACA1B,Q,GArHQY,IAAMC,WCgCjByB,MA3Bf,WAAoB,IAAD,EACKC,mBAAS,SADd,mBACZC,EADY,KACNC,EADM,KAEjB,OACE,yBAAKlC,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKmC,GAAG,QAAQnC,UAAoB,UAATiC,EAAmB,oBAAsB,qBAAsBG,QAAS,kBAAMF,EAAQ,WAAjH,SACA,yBAAKlC,UAAoB,WAATiC,EAAoB,oBAAsB,qBAAsBG,QAAS,kBAAMF,EAAQ,YAAvG,UACA,yBAAKlC,UAAoB,SAATiC,EAAkB,oBAAsB,qBAAsBG,QAAS,kBAAMF,EAAQ,UAArG,SAEJ,yBAAKlC,UAAU,WACX,yBAAKA,UAAoB,UAATiC,EAAmB,aAAe,eAChD,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKjC,UAAoB,WAATiC,EAAoB,aAAe,eACjD,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,yBAAKjC,UAAoB,SAATiC,EAAkB,aAAe,eAC7C,kBAAC,EAAD,UCbKI,MAVf,WACE,OACE,yBAAKrC,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,WAAWC,UAAWT,OCG1BU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.066166a5.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Union extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16750`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='45'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Union\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Union;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Stockton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16513`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                if (bus.MonitoredVehicleJourney.LineRef === '30' \n                || bus.MonitoredVehicleJourney.LineRef === '45' \n                || bus.MonitoredVehicleJourney.LineRef ==='91'){\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                    )\n                }\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Stockton\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Stockton;","import React from 'react';\nimport axios from 'axios';\n\nclass Sansome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=42006`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='4'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Sansome\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Sansome;\n","import React from 'react';\nimport axios from 'axios';\n\nclass VanNess extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=40032`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Van Ness\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default VanNess;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Broadway extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=13082`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n               \tBroadWay\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Broadway;\n","import React from 'react';\nimport axios from 'axios';\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stopCode: '16513',\n            agency: 'SF',\n            buss: [],\n            agencies: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n        axios.get(`https://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            let agencies = res.data;\n            this.setState({ agencies });\n        })\n    }\n\n    handleSubmit(e) {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    updateStopCode() {\n        return e => this.setState({\n            stopCode: e.currentTarget.value\n        })\n    }\n    updateAgency() {\n        return e => this.setState({\n            agency: e.currentTarget.value\n        })\n    }\n\n\n    render() {\n        let busss\n        let stop\n        let agencies\n        if (this.state.agencies){\n            agencies = this.state.agencies.map(agency => {\n                return (\n                        <option value={agency.Id}> \n {agency.ShortName?agency.ShortName:agency.Name} {agency.ShortName&&agency.ShortName!==agency.Name?`(${agency.Name})`:''}\n                         </option> \n                )\n            })\n        }\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                stop = bus.MonitoredVehicleJourney.MonitoredCall.StopPointName\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })   \n        }\n        return (\n            <div className = \"stop-all\" >\n            <div className=\"stop-left\">\n                \n                <br></br>\n                \n                Agency ShortList:\n                <br></br>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"SF\"} value=\"SF\" />SF Muni</label>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"GG\"} value=\"GG\" />Golden Gate Transit</label>\n                <br></br>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"AC\"} value=\"AC\" />AC Transit</label>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"MA\"} value=\"MA\" />Marin Transit</label>            \n            <br></br>\n            <br></br>\n            \n            Full List (all {this.state.agencies.length} transit providers!)\n                <br></br>\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                >\n                    {agencies}\n                </select>\n            <form onSubmit={this.handleSubmit}>\n                Stop ID:\n                <br></br>\n                <input type=\"text\"\n                    value={this.state.stopCode}\n                    onChange={this.updateStopCode()}\n                    className=\"stop-id\"\n                />\n                <br></br>\n                <input type=\"submit\" value=\"Update\" />\n                <br></br>\n            </form>\n            </div>\n            <div className=\"stop-right\">\n                { stop }\n                { busss }\n            </div>\n            </div>\n        );\n    }\n\n}\nexport default TransitStop;\n","import React, { useState } from 'react';\nimport Union from './union';\nimport Stockton from './stockton';\nimport Sansome from './sansome';\nimport VanNess from './vanNess';\nimport Broadway from './broadway';\nimport TransitStop from './transitstop';\n\nfunction Transit() {\n  let [pane, setPane] = useState('marin');\n  return (\n    <div className=\"transit-master\">\n      <div className=\"transit-switcher\">\n        <div id='marin' className={pane === 'marin' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('marin')}>MARIN</div>\n        <div className={pane === 'frisco' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('frisco')}>FRISCO</div>\n        <div className={pane === 'user' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('user')}>USER</div>\n      </div>\n    <div className=\"transit\">\n        <div className={pane === 'marin' ? 'transit-on' : 'transit-off'} >\n          <Sansome />\n          <VanNess />\n      </div>\n        <div className={pane === 'frisco' ? 'transit-on' : 'transit-off'}>\n          <Stockton />\n          <Union />\n          <Broadway />\n      </div>\n      <div className={pane === 'user' ? 'transit-on' : 'transit-off'}>\n          <TransitStop />\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Transit;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Transit from './components/transit'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route exact path=\"/transit\" component={Transit} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}