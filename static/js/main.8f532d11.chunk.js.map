{"version":3,"sources":["components/union.js","components/stockton.js","components/sansome.js","components/vanNess.js","components/broadway.js","components/transitstop.js","components/transit.js","App.js","serviceWorker.js","index.js"],"names":["Union","props","state","buss","dateParser","bind","axios","get","then","res","data","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","setState","zulu","Date","parse","toLocaleTimeString","busss","this","key","map","bus","MonitoredVehicleJourney","LineRef","className","DestinationName","MonitoredCall","AimedArrivalTime","ExpectedArrivalTime","React","Component","Stockton","Sansome","VanNess","Broadway","TransitStop","loaded","stopCode","agency","agencies","stopLists","stops","stopFilter","stopsFiltered","stop","Name","loadBusss","loadStops","updateStopFilter","agencySwitch","filter","WebSite","e","Contents","dataObjects","ScheduledStopPoint","id","includes","currentTarget","value","length","toLowerCase","console","log","toUpperCase","slow","Id","ShortName","onClick","StopPointName","OperatorRef","OriginName","type","onChange","updateAgency","checked","target","href","onMouseDown","disabled","updateStop","selected","hidden","placeholder","updateStopCode","maxlength","Transit","useState","pane","setPane","document","title","src","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f532d11.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Union extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16750`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='45'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"bold\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span>{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"bold\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Union\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Union;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Stockton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16513`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                if (bus.MonitoredVehicleJourney.LineRef === '30' \n                || bus.MonitoredVehicleJourney.LineRef === '45' \n                || bus.MonitoredVehicleJourney.LineRef ==='91'){\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"bold\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span>{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"bold\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                    )\n                }\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Stockton\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Stockton;","import React from 'react';\nimport axios from 'axios';\n\nclass Sansome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=42006`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='4'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"bold\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span>{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"bold\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Sansome\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Sansome;\n","import React from 'react';\nimport axios from 'axios';\n\nclass VanNess extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=40032`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"bold\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span>{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"bold\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Van Ness\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default VanNess;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Broadway extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=13082`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"bold\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span>{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"bold\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n               \tBroadWay\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Broadway;\n","import React from 'react';\nimport axios from 'axios';\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            stopCode: 'EMBR',\n            agency: 'BA',\n            agencies: [],\n            stopLists: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stop: {Name: 'Embarcadero'},\n            buss: []\n        }\n        this.dateParser = this.dateParser.bind(this)\n        this.loadBusss = this.loadBusss.bind(this);\n        this.loadStops = this.loadStops.bind(this);\n        this.updateStopFilter = this.updateStopFilter.bind(this)\n        this.agencySwitch = this.agencySwitch.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n        axios.get(`https://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            let agencies = res.data.filter(agency => !!agency.WebSite);\n            this.setState({ agencies });\n        })\n    }\n\n    loadBusss(e) {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n    loadStops(e) {\n        this.setState({ loaded: true })\n        axios.get(`https://api.511.org/transit/stops?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&operator_id=${this.state.agency}`)\n            .then(res => {\n                if (this.state.agency === \"BA\"){\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint.filter(stop => !stop.id.includes('place')&&!stop.Name.includes('Enter/Exit :'))\n                    this.setState({ \n                        stop: stops.filter(stop => stop.Name==='Embarcadero')[0],\n                        stopCode: 'EMBR',\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists: {'BA': stops}, \n                        stops\n                    });\n                    axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode?this.state.stopCode:'EMBR'}`).then(res => {\n                        let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                        this.setState({ \n                            buss \n                        });\n                    })\n                }\n                else {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint;\n                    let stop = stops[0]\n                    // let agency = this.state.agency\n                    let stopLists = this.state.stopLists\n                    stopLists[this.state.agency] = stops\n                    this.setState({ \n                        stop: stop,\n                        stopCode: stop.id,\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists,\n                        stops \n                    });\n                    axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stop.id}`)\n                    .then(res => {\n                        let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                        this.setState({ buss });\n                    })\n                }\n            })\n    }\n\n    //http://api.511.org/transit/stoptimetable?api_key={your-key}&MonitoringRef=13008&OperatorRef=SF\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n    agencySwitch(){\n        switch(this.state.agency){\n            case 'AM':\n            case 'PE':\n            case 'VC':\n                return 3\n            case 'BA':\n            case 'EM':\n            case 'SA':\n                return 4\n            case 'AC':\n            case 'CT':\n            case 'CC':\n            case 'DE':\n            case 'FS':\n            case 'GF':\n            case 'GG':\n            case 'MA':\n            case 'RV':\n            case 'SC':\n            case 'SF':\n            case 'SR':\n            case 'UC':\n            case 'VN':\n            case 'WC':  //variable!\n                return 5\n            case 'SS':\n            case 'WH':\n            case 'SM':\n            case 'ST':\n            case 'TD':  //variable!\n            case '3D':\n                return 6\n            case 'CE':\n            case 'CM':\n            case 'SO':\n                return 7  \n        }\n    }\n    updateStopCode() {\n        return e => {\n            if (e.currentTarget.value.length < 3){\n                this.setState({\n                    stopCode: e.currentTarget.value\n                })\n            }\n             else if (e.currentTarget.value.length === this.agencySwitch()){\n                let stop = this.state.stops.filter(stop=>stop.id.toLowerCase()===e.currentTarget.value.toLowerCase())[0]\n                    if (stop) {\n                        console.log(stop)\n                        this.setState({\n                            stopCode: e.currentTarget.value,\n                            stopsFiltered: this.state.stops, \n                            // stopFilter: stop.Name,\n                            stopFilter: '',\n                            stop          \n                        })\n                    } else {\n                        this.setState({\n                            stopCode: e.currentTarget.value,\n                            stop: {}\n                        })\n                    }\n                axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${e.currentTarget.value.toUpperCase()}`)\n                .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({ buss });\n                })\n            } else if (e.currentTarget.value.length>=6){\n                let stop = this.state.stops.filter(stop=>stop.id.toLowerCase()===e.currentTarget.value.toLowerCase())[0]\n                    if (stop){\n                        console.log(stop)\n                        this.setState({\n                            stopCode: e.currentTarget.value,\n                            stopsFiltered: this.state.stops, \n                            // stopFilter: stop.Name,\n                            stopFilter: '',\n                            stop          \n                        })\n                } else {\n                    this.setState({\n                        stopCode: e.currentTarget.value,\n                        stop: {}\n                    })\n                }\n                axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${e.currentTarget.value.toUpperCase()}`)\n                .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({ buss });\n                })\n            }\n            else {\n                this.setState({\n                    stopCode: e.currentTarget.value\n                })\n            }\n    }\n    }\n    updateAgency() {\n        return e =>     {\n            let agency = e.currentTarget.value\n            let stops = []\n            let stop\n        if (this.state.stopLists[agency]){\n            stops = this.state.stopLists[agency]\n            stop = stops[0]\n            this.setState({\n                stopFilter: '',\n                stopsFiltered: stops,\n                stopCode: stop.id,\n                buss: [],\n                loaded: true,\n                stop,\n                stops,\n                agency\n        })\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stops.id}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    } else {\n        this.setState({\n            agency: e.currentTarget.value,\n            stop: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stopCode: '',\n            buss: [],\n            loaded: false\n            })\n        }\n    }\n}\n    updateStop() {\n        return e => {\n            let stop = this.state.stopsFiltered[e.currentTarget.value]\n                console.log(stop)\n                this.setState({\n                    stopCode: stop.id,\n                    stop \n                })\n            axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stop.id}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n    }\n    updateStopFilter() {\n        return e => {\n            if (e.currentTarget.value.length === 1){\n                this.setState({\n                    stopFilter: e.currentTarget.value,\n                    stopsFiltered: this.state.stops\n                })\n            }\n            else if (e.currentTarget.value.length <= this.state.stopFilter.length){\n                let filtered = this.state.stops//.filter(stop => stop.Name.toLowerCase().includes(e.currentTarget.value.toLowerCase()))\n                this.setState({\n                    stopFilter: e.currentTarget.value,\n                    stopsFiltered: this.state.stops\n                })\n            }  \n            else if (e.currentTarget.value.length >= 2){\n                let stopsFiltered = this.state.stopsFiltered.filter(stop => stop.Name.toLowerCase().includes(e.currentTarget.value.toLowerCase()))\n                    this.setState({\n                        // stopFilter: stopsFiltered.length>0?e.currentTarget.value:'NO STOPS FOUND',\n                        // stopsFiltered: stopsFiltered.length>0?stopsFiltered:this.state.stops\n                        stopFilter: e.currentTarget.value,\n                        stopsFiltered\n                    })\n                if (stopsFiltered[0]){\n                    let stop = stopsFiltered[0]\n                    console.log(stop)\n                    this.setState({\n                        stopCode: stop.id,\n                        stop\n                    })\n                    axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stop.id}`)\n                    .then(res => {\n                        let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                        this.setState({ buss });\n                    })\n                }\n            }\n        }\n    }\n    render() {\n        let slow\n            if (this.state.loaded && !this.state.stops[0]){\n                slow = <div>Loading.....Muni and the VTA have ~3500 stops,<br></br>ACTransit more than 5000.</div>\n            }\n            else if (this.state.loaded && this.state.stops[0] && this.state.stopFilter){\n                slow = <div>\n                        Loaded <span className=\"bold\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                            {this.state.stopsFiltered.length===this.state.stops.length\n                            ?''\n                            :<><span className=\"bold\">{this.state.stopsFiltered.length}</span> in Filter.</>\n                            }    \n                    </div>\n            } \n            else if (this.state.loaded && this.state.stops[0]){\n                slow = <div>\n                        Loaded <span className=\"bold\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                    </div>\n            }\n        \n        let agencies\n        if (this.state.agencies){\n            let key = 0\n            agencies = this.state.agencies.map(agency => {\n                return (\n                        <option value={agency.Id} key={key++}> \n {agency.ShortName?agency.ShortName:agency.Name} {agency.ShortName&&agency.ShortName!==agency.Name?`(${agency.Name})`:''}\n                         </option> \n                )\n            })\n        }\n        let stops\n        if (this.state.stopsFiltered){\n            let key = 0\n            stops = this.state.stopsFiltered.map(stop => {\n                return (\n                        <option key={key} value={key++} \n                        // onClick={this.updateStop()}\n                        >\n                            {stop.Name} ({stop.id})\n                        </option>\n                )\n            })\n        }\n        let stop = {Name: ''}\n        let busss = <div className=\"bus\">\n                No Tracked Vehicles to show. \n                <br></br>\n                <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n            </div>\n        if (this.state.buss[0]){\n            stop.Name = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.OperatorRef!== \"BA\"){\n                    return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"bold\">\n                            {bus.MonitoredVehicleJourney.LineRef}\n                        </span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span>\n                            {this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}\n                        </span> => <span className=\"bold\">\n                            {this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}\n                        </span>\n                    </div>\n                ) \n            }else {\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span>\n                            {bus.MonitoredVehicleJourney.OriginName} \n                        </span> => <span className=\"bold\">\n                            {bus.MonitoredVehicleJourney.DestinationName}\n                        </span>\n                        <br></br>\n                        <span>\n                            {this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}\n                        </span> => <span className=\"bold\">\n                            {this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}\n                        </span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className = \"stop\" >\n            <div className=\"stop-left\">\n                <span className=\"short-title\">Agency ShortList:</span>    \n                <br></br>         \n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"SF\"} value=\"SF\" />Muni</label>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"AC\"} value=\"AC\" />AC</label>\n                <br></br>\n                <label><input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency===\"GG\"} value=\"GG\" />GG</label>\n                <label>&nbsp;&nbsp;&nbsp;<input type=\"radio\" onChange={this.updateAgency()} checked={this.state.agency === \"BA\"} value=\"BA\" />Bart</label>\n                <span className=\"agency-code\">{this.state.agency}</span>\n            <div className=\"agencies-string\">\n                All {this.state.agencies.length} Transit Agencies:\n                <div className=\"politics\">\n   (too many? i agree! <a target=\"_blank\" href=\"https://www.seamlessbayarea.org/\">Seamless Bay Area</a>)\n            </div>\n                </div>\n            <div className=\"agency\">\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                    onMouseDown={this.updateAgency()}\n                >\n                    {agencies}\n                </select>\n            </div>\n            <hr></hr>\n            <div className=\"slow\">\n            {this.state.loaded\n            ? <button disabled className=\"stop-loads\" >Load Stops</button>\n            : <button className=\"load-stops\" onClick={this.loadStops}>Load Stops</button>\n            }\n                {slow}\n            </div>\n            <select\n                disabled={!this.state.stopsFiltered[0]}\n                className=\"stop-select\"\n                onChange={this.updateStop()}\n                // onMouseDown={this.updateStop()}         \n                // onBlur={this.updateStop()}         \n                >\n                    {this.state.loaded?''\n                    :<option selected disabled hidden value='0'>No Stops Loaded</option>\n                    }\n                    {/* {this.state.stop.id \n                    ? <option selected disabled hidden value='0'>{this.state.stop.Name} ({this.state.stop.id})</option>\n                    :''} */}\n                {stops}\n            </select>      \n            <br></br>\n                <input type=\"text\"\n                    value={this.state.stopFilter}\n                    className=\"stop-filter\"\n                    onChange={this.updateStopFilter()}\n                    disabled={!this.state.loaded}\n                    placeholder={this.state.loaded?\"Live Filter\":\"No Stops Loaded\"}\n                />\n                <br></br>\n                {/* {this.state.stop.Name} */}\n                  \n            <div className=\"stop-info\">\n                \n                <input type=\"text\"\n                    value={this.state.stopCode}\n                    onChange={this.updateStopCode()}\n                    className=\"stop-id\"\n                    placeholder=\"Stop by ID\"\n                    maxlength={`${this.agencySwitch()}`}\n                    // disabled={!this.state.loaded}\n                />\n                <span \n                className=\"stop-title\"> { \n                this.state.stop.Name \n                ? this.state.stop.Name \n                : stop.Name } \n                </span>\n            </div>\n                { busss }\n            </div>\n            </div>\n        );\n    }\n\n}\nexport default TransitStop;\n","import React, { useState } from 'react';\nimport Union from './union';\nimport Stockton from './stockton';\nimport Sansome from './sansome';\nimport VanNess from './vanNess';\nimport Broadway from './broadway';\nimport TransitStop from './transitstop';\n\nfunction Transit() {\n  let [pane, setPane] = useState('user');\n  document.title=\"react511\"\n  return (\n    <div className=\"transit-master\">\n      <div className=\"transit-switcher\">\n        <div className=\"busemoji\">\n          <a href=\"https://github.com/hechtoid/react511\" target=\"_blank\">\n            🚌\n          </a>\n        </div>\n        <div id='marin' className={pane === 'marin' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('marin')}>MARIN</div>\n        <div className={pane === 'frisco' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('frisco')}>FRISCO</div>\n        <div className={pane === 'user' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('user')}>USER</div>\n        <div className=\"five-eleven\">\n          <a href=\"https://511.org/open-data/transit\" target=\"_blank\">\n            <img className=\"five-eleven\" src=\"http://proxy-prod.511.org/assets/img/branding/511_original_web.png\">\n            </img>\n          </a>\n        </div>\n      </div>\n\n\n      <div className=\"transit\">\n          <div className={pane === 'marin' ? 'transit-on' : 'transit-off'} >\n            <br></br>\n            {pane === 'marin' ? <><Sansome /> <VanNess /></> : ''}\n          </div>\n          <div className={pane === 'frisco' ? 'transit-on' : 'transit-off'}>\n          <br></br>\n            {pane === 'frisco' ? <><Stockton /> <Union /> <Broadway /> </>: ''}\n          </div> \n          <div className={pane === 'user' ? 'transit-on' : 'transit-off'}>\n            <TransitStop />\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Transit;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Transit from './components/transit'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route exact path=\"/transit\" component={Transit} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}