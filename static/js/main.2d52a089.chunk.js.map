{"version":3,"sources":["components/bus.js","components/transitstop.js","components/transitheader.js","components/vehicular.js","components/anyStop.js","components/anyStopWildCard.js","components/aa.js","components/da.js","App.js","serviceWorker.js","index.js"],"names":["Bus","props","bus","MonitoredVehicleJourney","OperatorRef","className","id","LineRef","DestinationName","OriginName","MonitoredCall","ExpectedArrivalTime","Date","parse","AimedArrivalTime","toLocaleTimeString","hour","minute","Math","floor","caltrainLine","title","VehicleRef","to","pathname","state","vehicleNumber","agency","ExpectedDepartureTime","TransitStop","selectID","e","target","select","loaded","stopCode","agencies","stopLists","stops","stopFilter","stopsFiltered","stop","Name","buss","loadBusss","bind","loadStops","updateStopFilter","updateStopCode","handleSubmit","agencyCodeLengthMap","axios","get","then","res","data","filter","WebSite","setState","this","preventDefault","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","currentTarget","value","Contents","dataObjects","ScheduledStopPoint","includes","toUpperCase","length","searchTerms","toLowerCase","split","every","term","stoppCode","slow","key","map","Id","ShortName","locationLink","stopName","busss","onClick","StopPointName","Location","type","onChange","updateAgency","checked","onMouseDown","href","rel","disabled","updateStop","selected","hidden","placeholder","onFocus","React","Component","withRouter","location","substring","document","role","aria-label","src","alt","Vehicular","loadVehicle","updateVehicleNumber","vehicle","Siri","VehicleMonitoringDelivery","VehicleActivity","gFrame","expected","vehicleInfo","firstStop","futureStops","VehicleLocation","frameBorder","Latitude","Longitude","StopPointRef","AimedDepartureTime","OnwardCalls","OnwardCall","onSubmit","Monitored","AnyStop","filterIN","filterOUT","AnyStopWildCard","match","params","history","push","AA","App","basename","process","exact","path","component","DA","render","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d52a089.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Bus(props) {\nif (props.bus.MonitoredVehicleJourney.OperatorRef === \"BA\") {\n        return (\n        <div className=\"bus\" id={props.bus.MonitoredVehicleJourney.LineRef} >\n                <div>\n                        <span className=\"bold\">\n                {props.bus.MonitoredVehicleJourney.DestinationName}\n                        </span>  \n                        <span className=\"white\">\n                {'<='} {props.bus.MonitoredVehicleJourney.OriginName}\n                        </span>\n                </div>\n                <hr></hr>\n                <div>\n                        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n                        ? <><span className=\"gray\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span>\n                        <span className=\"bold\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span></> \n                        : <span className=\"bold\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span>}\n                        <div className=\"countdown\">\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n? <div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime))-new Date()))/60000)}</div>\n: <div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}               \n                                <div className=\"min\">min</div>\n                        </div>\n                </div>\n        </div>\n)} else if (props.bus.MonitoredVehicleJourney.OperatorRef === \"CT\") {\n        let caltrainLine = 'GY-N'\n                if (props.bus.MonitoredVehicleJourney.LineRef === 'Limited') {caltrainLine = 'YL-N'}\n                if (props.bus.MonitoredVehicleJourney.LineRef === 'Bullet') {caltrainLine = 'RD-N'}\n        return (\n        <div className=\"bus\" id={caltrainLine}>\n                <div>\n                        <span title=\"Track Vehicle\" className=\"bold\">\n                {props.bus.MonitoredVehicleJourney.VehicleRef\n                        ? <Link className=\"gps\" to={{pathname: \"/vehicular\", state: {\n        vehicleNumber: props.bus.MonitoredVehicleJourney.VehicleRef,\n        agency: props.bus.MonitoredVehicleJourney.OperatorRef}}} >\n                        {props.bus.MonitoredVehicleJourney.LineRef}<sup>GPS</sup>\n                        </Link>\n                        : <span className=\"no-gps\">{props.bus.MonitoredVehicleJourney.LineRef}</span>}\n                => </span>{props.bus.MonitoredVehicleJourney.DestinationName} \n                </div>\n                <hr></hr>\n                <div>\n                {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime \n                                && props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime \n                                !== props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime\n                                ? <><span className=\"gray\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                                </span>\n                                <span className=\"bold\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                                </span></>\n                                : <span className=\"bold\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                                </span>}\n                        <div className=\"countdown\">\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime\n? <div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime))-new Date()))/60000)}</div>\n: <div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}    \n                                <div className=\"min\">min</div>\n                        </div>          \n                </div>\n        </div>\n    )} else {\n    //if (['SF', 'AC', 'GG', 'SM', 'MA', 'SC'].includes(props.bus.MonitoredVehicleJourney.OperatorRef)){\n        return(\n        <div className=\"bus\">\n                <div>\n                        <span title=\"Track Vehicle\" className=\"bold\">\n                {props.bus.MonitoredVehicleJourney.VehicleRef\n                        ? <Link className=\"gps\" to={{pathname: \"/vehicular\", state: {\n                vehicleNumber: props.bus.MonitoredVehicleJourney.VehicleRef,\n                agency: props.bus.MonitoredVehicleJourney.OperatorRef}}} >\n                                {props.bus.MonitoredVehicleJourney.LineRef}<sup>GPS</sup>\n                        </Link>\n                        : <span className=\"no-gps\">{props.bus.MonitoredVehicleJourney.LineRef}</span>}\n                        =></span><span className=\"bold\">\n                {props.bus.MonitoredVehicleJourney.DestinationName}\n                        </span>\n                </div>\n                <hr></hr>\n                <div>     \n                {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n                        ? <><span className=\"gray\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span>\n                        <span className=\"bold\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span></>\n                        : <span className=\"bold\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span>}\n                        <div className=\"countdown\">\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n? <div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime))-new Date()))/60000)}</div>\n: <div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}\n                                <div className=\"min\">min</div>\n                        </div>\n                </div>\n        </div>\n    )} \n}\nexport default Bus;\n\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport Bus from './bus'\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            stopCode: 'EMBR',\n            agency: 'BA',\n            agencies: [],\n            stopLists: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stop: { Name: 'Embarcadero' },\n            buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this);\n        this.loadStops = this.loadStops.bind(this);\n        this.updateStopFilter = this.updateStopFilter.bind(this)\n        this.updateStopCode = this.updateStopCode.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.selectID = this.selectID.bind(this)\n        \n        this.agencyCodeLengthMap = {\n            'AM': 3, 'PE': 3, 'VC': 3, \n            'BA': 4, 'EM': 4, 'SA': 4, \n            'AC': 5, 'CT': 5, 'CC': 5, \n            'DE': 5, 'FS': 5, 'GF': 5, \n            'GG': 5, 'MA': 5, 'RV': 5, \n            'SC': 5, 'SF': 5, 'SR': 5, \n            'UC': 5, 'VN': 5, 'WC': 5, \n            'SS': 6, 'WH': 6, 'SM': 6, \n            'ST': 6, 'TD': 6, '3D': 6, \n            'CE': 7, 'CM': 7, 'SO': 7\n        }\n    }\n    selectID = (e) => e.target.select();\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            let agencies = res.data.filter(agency => !!agency.WebSite);\n            this.setState({ agencies });\n        })\n        this.loadBusss()\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        this.loadBusss()\n    }\n    loadBusss(agency = this.state.agency, stopCode = this.state.stopCode) {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${agency}&stopCode=${stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    updateAgency(e) {\n        return e =>     {\n            let agency = e.currentTarget.value\n            let stops = []\n            let stop\n        if (this.state.stopLists[agency]) {\n            stops = this.state.stopLists[agency]\n            stop = stops[0]\n            this.setState({\n                stopFilter: '',\n                stopsFiltered: stops,\n                stopCode: stop.id,\n                buss: [],\n                loaded: true,\n                stop,\n                stops,\n                agency\n        })\n        this.loadBusss( agency, stop.id )\n    } else {\n        this.setState({\n            agency: e.currentTarget.value,\n            stop: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stopCode: '',\n            buss: [],\n            loaded: false\n            })\n            }\n        }\n    }    \n    loadStops(e) {\n        this.setState({ loaded: true })\n        axios.get(`https://api.511.org/transit/stops?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&operator_id=${this.state.agency}`)\n            .then(res => {\n                if (this.state.agency === \"BA\") {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint.filter(stop => !stop.id.includes('place') && !stop.Name.includes('Enter/Exit :'))\n                    let stopCode = this.state.stopCode || 'EMBR'\n                    let stop = stops.filter(stop => stop.id === stopCode.toUpperCase())[0] || stops.filter(stop => stop.id === 'EMBR')[0]\n                    this.setState({\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists: {'BA': stops},\n                        stopCode: stop.id,\n                        stops,\n                        stop\n                    });\n                    this.loadBusss( this.state.agency, stop.id )\n                }\n                else {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint;\n                    let stop = stops.filter(stop => stop.id === this.state.stopCode.toUpperCase())[0] || stops[0]\n                    let stopLists = this.state.stopLists\n                    stopLists[this.state.agency] = stops\n                    this.setState({\n                        stopCode: stop.id,\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists,\n                        stops,\n                        stop\n                    });\n                    this.loadBusss( this.state.agency, stop.id )\n                }\n            })\n    }    \n    updateStop(e) {\n        return e => {\n            let stop = this.state.stopsFiltered[e.currentTarget.value]\n                this.setState({\n                    stopCode: stop.id,\n                    stop\n                })\n            this.loadBusss(  this.state.agency, stop.id )\n        }\n    }\n    updateStopFilter(e) {\n        return e => {\n            let stopFilter = e.currentTarget.value\n            if (stopFilter.length === 1) {\n                this.setState({\n                    stopsFiltered: this.state.stops,\n                })\n            }\n            if (stopFilter.length < 3) {\n                this.setState({\n                    stopFilter\n                })\n            }\n            else if (stopFilter.length <= this.state.stopFilter.length) {\n                let stopsFiltered = this.state.stops\n                this.setState({\n                    stopFilter,\n                    stopsFiltered\n                })\n            }\n            else if (stopFilter.length >= 3) {\n                this.setState({ stopFilter })\n                let searchTerms = stopFilter.toLowerCase().split(\" \")\n                let stopsFiltered = this.state.stopsFiltered.filter(\n                    stop => searchTerms.every(term => stop.Name.toLowerCase().includes(term)))\n                this.setState({ stopsFiltered })\n                if (stopsFiltered[0]) {\n                    let stop = stopsFiltered[0]\n                    if (this.state.stopCode !== stop.id) {\n                        this.setState({\n                            stopCode: stop.id,\n                            stop\n                        })\n                        this.loadBusss(  this.state.agency, stop.id )\n                    }\n                }\n            }\n        }\n    }\n    updateStopCode(e) {\n        return e => {\n            let stopCode = e.currentTarget.value\n            if (stopCode.length <= this.agencyCodeLengthMap[this.state.agency]) {\n                this.setState({\n                    stopCode\n                })\n            }\n            if (stopCode.length === this.agencyCodeLengthMap[this.state.agency]) {\n                let stoppCode = stopCode.toUpperCase()\n                axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stoppCode}`)\n                .then(res => {\n                    let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({  buss })\n                    if (buss[0]) {this.setState({ stopCode: stoppCode })}\n                })         \n                if (this.state.stops) {\n                let stop = this.state.stops.filter(stop => stop.id.toUpperCase() === stoppCode)[0]\n                    if (stop) {\n                        this.setState({\n                            stopsFiltered: this.state.stops,\n                            stopFilter: '',\n                            stopCode: stoppCode,\n                            stop\n                        })\n                    } else {\n                        this.setState({\n                            stop: {},\n                        })\n                    }\n                }\n            }\n        }\n    }\n    render() {\n        let slow\n            if (this.state.loaded && !this.state.stops[0]) {\n                slow = <div><span>Muni and the VTA have <span className=\"stops-number\">~3500</span> stops,</span><br></br><span>ACTransit more than <span className=\"stops-number\">5000</span>.</span></div>\n            }\n            else if (this.state.loaded && this.state.stops[0] && this.state.stopFilter) {\n                slow = <div>\n                        Loaded <span className=\"stops-number\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                            {this.state.stopsFiltered.length===this.state.stops.length\n                            ?''\n                            :<><span className=\"stops-number\">{this.state.stopsFiltered.length}</span> in Filter.</>\n                            }\n                    </div>\n            }\n            else if (this.state.loaded && this.state.stops[0]) {\n                slow = <div>\n                        Loaded <span className=\"stops-number\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                    </div>\n            }\n\n        let agencies\n        if (this.state.agencies) {\n            let key = 0\n            agencies = this.state.agencies.map(agency => {\n                return (\n                        <option value={agency.Id} key={key++}>\n                            {agency.ShortName\n                            ? agency.ShortName\n                            : agency.Name} {\n                            agency.ShortName && agency.ShortName !== agency.Name\n                            ? `(${agency.Name})`\n                            : ''}\n                         </option>\n                )\n            })\n        }\n        let stops\n        if (this.state.stopsFiltered) {\n            let key = 0\n            stops = this.state.stopsFiltered.map(stop => {\n                return (\n                        <option key={key} value={key++}>\n                            {stop.Name} ({stop.id})\n                        </option>\n                )\n            })\n        }\n        let stopName = ''\n        let busss = <div className=\"bust\">\n                No Tracked Vehicles.\n                <br></br>\n                <span className='update' onClick={this.handleSubmit}>Check again</span>, check your inputs, or check the schedule.\n            </div>\n        if (this.state.buss[0]) {\n            stopName = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0\n            busss = this.state.buss.map(bus => { \n                return <Bus bus={bus} key={key++} /> \n            })\n        }\n        let locationLink\n        if (this.state.stopCode.length === this.agencyCodeLengthMap[this.state.agency]){\n            locationLink = \n            <Link \n            to={`/anystop/${this.state.agency}/${this.state.stopCode}`}>\n                <div className=\"map-link\">\n                    View Stop\n                </div>\n            </Link>}\n        if (this.state.stop.Location){\n            let stop = this.state.stop\n            locationLink = \n            <Link \n            to={{\n                pathname: `/anystop/${this.state.agency}/${this.state.stopCode}`,\n                state: {\n                    stop\n                }\n            }}>\n                <div className=\"map-link\">\n                    View Stop\n                </div>\n            </Link>\n        }\n        return (\n            <div className=\"transit-stop\">\n                <div className=\"agency-upper\">\n                <div className=\"radios\">\n            <div className=\"short-title\">Agency ShortList:</div>\n                <div className=\"radio-one\">\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"SF\"} \n                        value=\"SF\" />SF</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"GG\"} \n                        value=\"GG\" />GG</label>\n                    <label>&nbsp;&nbsp;&nbsp;<input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency === \"BA\"} \n                        value=\"BA\" />Bart</label>\n                </div>\n                <div className=\"radio-two\">\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"AC\"} \n                        value=\"AC\" />AC</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency === \"SM\"} \n                        value=\"SM\" />Sam</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"MA\"} \n                        value=\"MA\" />Marin</label>\n                </div>\n                </div>\n            <span className=\"agency-code\">{this.state.agency}</span>\n\t\t    </div>\n            <div className=\"agencies-string\">\n                All {this.state.agencies.length} Transit Agencies:\n                </div>\n            <div className=\"agency\">\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                    onMouseDown={this.updateAgency()}\n                >\n                    {agencies}\n                </select>\n                <div className=\"politics\">\n(too many? i agree! <a href=\"https://www.seamlessbayarea.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\nSeamless Bay Area</a>)\n            </div>\n            </div>\n            <hr></hr>\n            <div className=\"slow\">\n            {!this.state.loaded\n            ? <button className=\"load-stops\" onClick={this.loadStops}>Load Stops</button>\n            : this.state.stops[0]\n            ?  <button disabled className=\"stop-loads\" >Loaded</button>\n            : <button disabled className=\"stop-loading\" >Loading</button>\n            }\n                {slow}\n            </div>\n                <select\n                disabled={!this.state.stopsFiltered[0]}\n                className=\"stop-select\"\n                onChange={this.updateStop()}\n                >\n                    {this.state.stop.id\n                    ? <option selected disabled hidden value='0'>{this.state.stop.Name} ({this.state.stop.id})</option>\n                    :''}\n                    {this.state.stop.id}\n                {stops}\n            </select>\n            <br></br>\n                <input type=\"text\"\n                    value={this.state.stopFilter}\n                    className=\"stop-filter\"\n                    onChange={this.updateStopFilter()}\n                    disabled={!this.state.loaded}\n                    placeholder={this.state.loaded?\"Type to Search\":\"Load Stops to Search\"}\n                    //onPaste={}\n                />\n                <br></br>\n            <div className=\"stop-info\">\n                <div className=\"stop-title\" onClick={this.handleSubmit}>\n                { this.state.stop.Name\n                ? this.state.stop.Name\n                : stopName }\n                <div>Tap to ReFresh</div>\n                </div>\n                <div>\n                    <input \n                    type={(this.state.agency ==='BA'||this.state.agency ==='AM')?\"text\":\"number\"}\n                    id=\"stop-id\"\n                    placeholder=\"Stop Code\"\n                    value={this.state.stopCode}\n                    onFocus={this.selectID}\n                    onChange={this.updateStopCode()}\n                    />\n                { locationLink }\n                </div>\n\n\t\t    </div>\n            { busss }\n        </div>\n        );\n    }\n}\nexport default TransitStop;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nfunction TransitHeader(props) {\n  let title=props.location.pathname.substring(1)\n  document.title=`transitYourself - ${title}`\n  return (\n    <div className=\"transit-header\">\n      <Link to= \"/vehicular\" >\n        <div id=\"busemoji\" className={\n          props.location.pathname === '/vehicular'\n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>\n<span title=\"Vehicular\" role=\"img\" aria-label=\"bus emoji\">🚌</span>\n        </div>\n      </Link>\n      <Link to=\"/weekender\">\n        <div id='marin' title=\"Weekender\" className={\n          props.location.pathname === '/weekender' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>Weekender</div>\n      </Link>\n      <Link to= \"/commuter\" >\n        <div title=\"Commuter\" className={\n          props.location.pathname === '/commuter' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>Commuter</div>\n      </Link>\n      <Link to=\"/anywherer\">\n        <div title=\"Anywherer\" className={\n          props.location.pathname === '/anywherer' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>Anywherer</div>\n      </Link>\n      <div className=\"five-eleven\">\n  <a href=\"https://511.org/open-data/transit\" title=\"Powered by 511 Open Data\" target=\"_blank\" rel=\"noopener noreferrer\">\n  <img className=\"five-eleven\" src=\"https://proxy-prod.511.org/assets/img/branding/511_original_web.png\" alt=\"511 logo\"></img>\n      </a>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(TransitHeader);\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Vehicular extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.location.state || {vehicleNumber: '', agency: 'SF'}\n    \n        this.loadVehicle = this.loadVehicle.bind(this)\n        this.updateVehicleNumber = this.updateVehicleNumber.bind(this)\n        this.updateAgency = this.updateAgency.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.selectID = this.selectID.bind(this)\n    }\n    selectID = (e) => e.target.select();\n\n    componentDidMount() {\n        this.loadVehicle()\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        this.loadVehicle()\n    }\n    loadVehicle() { \n        let vehicle = {}\n        let agency = this.state.agency.toUpperCase()\n        axios.get(`https://api.511.org/transit/VehicleMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&agency=${agency}&format=json&vehicleID=${this.state.vehicleNumber}`)\n            .then(res => {\n                vehicle = res.data.Siri.ServiceDelivery.VehicleMonitoringDelivery.VehicleActivity\n                ? res.data.Siri.ServiceDelivery.VehicleMonitoringDelivery.VehicleActivity[0].MonitoredVehicleJourney\n                : {}\n                this.setState({ vehicle });\n            })\n    }\n\n    updateVehicleNumber(e) {\n        return e => {\n            let vehicleNumber = e.currentTarget.value\n            this.setState({\n                vehicleNumber\n            })\n        }\n    }\n    updateAgency(e) {\n        return e => {\n            let agency = e.currentTarget.value\n            if (agency.length <= 2){\n            this.setState({\n                agency\n            })}\n        }\n    }\n    render() {\n            let vehicleInfo = <div className=\"vehicle-info\">No Tracked Vehicle</div>\n            let firstStop = ''\n            let futureStops = <div className=\"future-stops\">No Future Stops</div>\n            let key = 0\n            let gFrame\n            if (this.state.vehicle && this.state.vehicle.VehicleLocation) { \n                gFrame = <iframe title=\"gFrame\" frameBorder=\"1\"\nsrc={`https://www.google.com/maps/embed/v1/place?zoom=14&q=${this.state.vehicle.VehicleLocation.Latitude},${this.state.vehicle.VehicleLocation.Longitude}&key=AIzaSyAIe8CQdaU5qYMgUBimNtNLtz6MKhODsNU`}>Loading Map...</iframe> \n            }\n            if (this.state.vehicle && this.state.vehicle.MonitoredCall) {\n                vehicleInfo =\n                    <div className=\"vehicle-info\">\n                    Route <span className=\"bold\">\n                        {this.state.vehicle.LineRef}\n                    </span> to <span className=\"bold\">\n                        {this.state.vehicle.DestinationName}\n                    </span>\n                    </div>\n                let expected\n                {this.state.agency === 'CT'\n                ? expected = this.state.vehicle.MonitoredCall.ExpectedDepartureTime \n                : expected = this.state.vehicle.MonitoredCall.ExpectedArrivalTime}\n                firstStop =  \n                <div className=\"stop\" >\n                    <div>\n                        <span className=\"bold\">\n                            {this.state.vehicle.MonitoredCall.StopPointName}\n                        </span>\n                        <Link \n                to={`/anystop/${this.state.agency}/${this.state.vehicle.MonitoredCall.StopPointRef}`}>\n                            <div className=\"map-link\">\n                                <span title=\"bus stop\" role=\"img\" aria-label=\"bus stop emoji\">🚏</span>\n                                {this.state.vehicle.MonitoredCall.StopPointRef}\n                            </div>\n                        </Link> \n                    </div>\n                    <hr></hr>\n                    <div>\n                    {expected && expected !== this.state.vehicle.MonitoredCall.AimedDepartureTime\n                        ? <><span className=\"gray\">\n            {new Date(Date.parse(this.state.vehicle.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span>\n                        <span className=\"bold\">\n            {new Date(Date.parse(expected)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span></>\n                        : <span className=\"bold\">\n            Scheduled {new Date(Date.parse(this.state.vehicle.MonitoredCall.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                        </span>}\n                    <div className=\"countdown\">\n                        {/* <div className=\"min\">in</div> */}\n                {expected && expected !== this.state.vehicle.MonitoredCall.AimedDepartureTime\n                ? <div className=\"min-math\">\n            {Math.floor(((new Date(Date.parse(expected))-new Date()))/60000)}</div>\n                : <div className=\"min-math\">\n            {Math.floor(((new Date(Date.parse(this.state.vehicle.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}               \n                        <div className=\"min\">min</div>\n                    </div>\n                </div>   \n                </div>\n            }\n            if (this.state.vehicle && this.state.vehicle.OnwardCalls && this.state.vehicle.OnwardCalls.OnwardCall[0]) {\n                futureStops = \n                    <div className=\"future-stops\">\n                        {firstStop}\n                        {this.state.vehicle.OnwardCalls.OnwardCall.map(stop => {\n                            let expected\n                            {this.state.agency.toUpperCase() === 'CT'\n                            ? expected = stop.ExpectedDepartureTime \n                            : expected = stop.ExpectedArrivalTime}\n                            return ( <div className=\"stop\" key={key++}>\n                            <div>\n                                <span className=\"bold\">\n                                    {stop.StopPointName}\n                                </span>\n                                <Link \n                        to={`/anystop/${this.state.agency}/${stop.StopPointRef}`}>\n                                    <div className=\"map-link\">\n                                        <span title=\"bus stop\" role=\"img\" aria-label=\"bus stop emoji\">🚏</span>\n                                        {stop.StopPointRef}\n                                    </div>\n                                </Link> \n                            </div>\n                            <hr></hr>\n                            <div>\n                            {expected  && expected !== stop.AimedDepartureTime\n                                ? <><span className=\"gray\">\n                    {new Date(Date.parse(stop.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                                    </span>\n                                    <span className=\"bold\">\n                    {new Date(Date.parse(expected)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                                </span>\n                                </>\n                                : <span className=\"bold\">\n                    Scheduled {new Date(Date.parse(stop.AimedArrivalTime)).toLocaleTimeString([],{ hour: 'numeric', minute: 'numeric' })}\n                                </span>}\n                            <div className=\"countdown\">\n                                {/* <div className=\"min\">in</div> */}\n                        {expected\n                        ? <div className=\"min-math\">\n                    {Math.floor(((new Date(Date.parse(expected))-new Date()))/60000)}</div>\n                        : <div className=\"min-math\">\n                    {Math.floor(((new Date(Date.parse(stop.AimedArrivalTime))-new Date()))/60000)}</div>}               \n                                <div className=\"min\">min</div>\n                            </div>\n                        </div>   \n                        </div>\n                                )\n                            })\n                        }\n                    </div>\n            }\n        return (\n            <div className=\"vehicular\">\n                <div className=\"short-title\">\n                    Live Tracking - Vehicle {this.state.vehicle\n                        ? this.state.vehicle.VehicleRef\n                        : this.state.vehicleNumber}\n                </div>             \n                    {vehicleInfo}\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\"\n                        id=\"vehicle-agency\"\n                        placeholder=\"Agency\"\n                        value={this.state.agency}\n                        onChange={this.updateAgency()}\n                        />\n                    <input type=\"number\"\n                        id=\"vehicle-number\"\n                        placeholder=\"Vehicle\"\n                        value={this.state.vehicleNumber}\n                        onFocus={this.selectID}\n                        onChange={this.updateVehicleNumber()}\n                        />\n                    {this.state.vehicle && this.state.vehicle.Monitored\n                    ?<input type=\"submit\" value=\"ReLoad\" />\n                    :<input type=\"submit\" value=\"Load\" />}\n                        <br></br>\n                    <a className=\"vehicular-feedback\" href=\"https://www.sfmta.com/getting-around/muni/muni-feedback\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        SFMUNI Vehicle Numbers\n                    </a>\n                </form>\n            <div className='g-frame'>\n                {gFrame}\n            </div> \n                {futureStops}\n            </div>\n        );\n    }\n}\nexport default Vehicular;\n","import React from 'react';\nimport axios from 'axios';\nimport Bus from './bus'\n\nclass AnyStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadBusss()\n    }\n    loadBusss() {\n        // if (this.props.agency === 'SB' || this.props.agency === 'GF') {\n        //     axios.get(`https://api.511.org/transit/stoptimetable?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&OperatorRef=${this.props.agency}&MonitoringRef=${this.props.stopCode}`)\n        //     .then(res => {\n        //         let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n        //         this.setState({ buss });\n        //     })\n        // } else \n        {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.props.agency}&stopCode=${this.props.stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                if (this.props.filterIN){buss = buss.filter( bus => this.props.filterIN.includes(bus.MonitoredVehicleJourney.LineRef))} \n                if (this.props.filterOUT){buss = buss.filter( bus => !this.props.filterOUT.includes(bus.MonitoredVehicleJourney.LineRef))}\n                this.setState({ buss });\n            })\n        }\n    }\n\n    render() {\n        let busss = <div className=\"bust\">\n            No Tracked Vehicles to show. \n            <br></br>\n            <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n        </div>\n        let stopName\n        if (this.state.buss[0]){\n            stopName = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                return <Bus bus={bus} key={key++} /> \n            })   \n        }\n        return (\n            <div className=\"any-stop\">\n                 {this.props.title \n                ? this.props.title\n                : stopName}\n                <br></br>\n                {busss}\n            </div>\n        );\n    }\n}\nexport default AnyStop;","import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nimport Bus from './bus';\n\nclass AnyStopWildCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stopCode: this.props.match.params.stopCode?this.props.match.params.stopCode.toUpperCase():'',\n            agency: this.props.match.params.agency.toUpperCase(),\n            buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this);\n        this.updateStopCode = this.updateStopCode.bind(this)\n        this.selectID = this.selectID.bind(this)\n\n        this.agencyCodeLengthMap = {\n            'AM': 3, 'PE': 3, 'VC': 3, \n            'BA': 4, 'EM': 4, 'SA': 4, \n            'AC': 5, 'CT': 5, 'CC': 5, \n            'DE': 5, 'FS': 5, 'GF': 5, \n            'GG': 5, 'MA': 5, 'RV': 5, \n            'SC': 5, 'SF': 5, 'SR': 5, \n            'UC': 5, 'VN': 5, 'WC': 5, \n            'SS': 6, 'WH': 6, 'SM': 6, \n            'ST': 6, 'TD': 6, '3D': 6, \n            'CE': 7, 'CM': 7, 'SO': 7\n        }\n    }\n    selectID = (e) => e.target.select();\n\n    componentDidMount() {\n       document.title=`transitYourself - ${this.state.agency} Live Stop #${this.state.stopCode}`\n       this.loadBusss()\n    }\n    loadBusss () {\n // if (this.state.agency === 'SB' || this.state.agency === 'GF') {\n // if (this.state.agency === 'SB' || this.state.agency === 'GF') {\n // if (this.state.agency === 'SB' || this.state.agency === 'GF') {\n        //     axios.get(`https://api.511.org/transit/stoptimetable?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&OperatorRef=${this.state.agency}&MonitoringRef=${this.props.match.params.stop.toUpperCase()}`)\n        //     axios.get(`https://api.511.org/transit/stoptimetable?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&OperatorRef=${this.state.agency}&MonitoringRef=${this.props.match.params.stop.toUpperCase()}`)\n        //     .then(res => {\n        //         console.log(res)\n        //         let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n        //         this.setState({ buss });\n        //     })\n        // } else \n        {\n            if (this.state.stopCode.length === this.agencyCodeLengthMap[this.state.agency]) {\n            axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n                .then(res => {\n                    let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({ buss });\n                })\n            }\n        }\n    }\n    updateStopCode(e) {\n        return e => {\n            let stopCode = e.currentTarget.value\n            if (stopCode.length <= this.agencyCodeLengthMap[this.state.agency]) {\n                this.setState({\n                    stopCode\n                })}\n            if (stopCode.length === this.agencyCodeLengthMap[this.state.agency]) {\n                let stoppCode = stopCode.toUpperCase()\n                this.props.history.push(`/anystop/${this.state.agency}/${stoppCode}`)\n                axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stoppCode}`)\n                    .then(res => {\n                        let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                        this.setState({ buss, stopCode: stoppCode });\n            })\n            }\n        }\n    }\n    render() {\n        let busss = <div className=\"bust\">\n            No Tracked Vehicles to show. \n            <br></br>\n            <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n        </div>\n        let stop\n        if (this.state.buss[0]){\n            stop = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                return <Bus bus={bus} key={key++} />\n            })   \n        }\n        if (this.props.location.state){stop = this.props.location.state.stop.Name || stop }\n        let gFrame\n        if (this.props.location.state && this.props.location.state.stop.Location) { \n            gFrame = <iframe title=\"gFrame\" frameBorder=\"1\"\nsrc={`https://www.google.com/maps/embed/v1/place?zoom=13&q=${this.props.location.state.stop.Location.Latitude},${this.props.location.state.stop.Location.Longitude}&key=AIzaSyAIe8CQdaU5qYMgUBimNtNLtz6MKhODsNU`}>Loading Map...</iframe> \n        }\n        return (\n        <div className='transit-on'>\n            <div className=\"any-stop-wild-card\">\n            <div className='short-title'>\n        {this.state.agency} {this.props.match.params.stopCode?'#'+this.props.match.params.stopCode.toUpperCase():''}\n        </div>\n        <input  \n                    type={(this.state.agency ==='BA'||this.state.agency ==='AM')?\"text\":\"number\"}\n                    id=\"stop-id\"\n                    placeholder=\"Stop Code\"\n                    value={this.state.stopCode}\n                    onFocus={this.selectID}\n                    onChange={this.updateStopCode()}\n                />\n            \n            <div className=\"stop-title\" onClick={this.loadBusss}>\n                { stop }\n                <div>Tap to ReFresh</div>\n                </div>\n                    {gFrame}\n                <div className=\"buss\">\n             \n                    {busss}\n            </div>\n        </div>\n        </div>\n       \n        );\n    }\n\n}\nexport default withRouter(AnyStopWildCard);\n","import React from 'react';\nimport AnyStop from './anyStop';\n\nfunction AA() {\n  return (\n    <div>\n      <div className=\"busemoji\">\n      </div>\n      <div className=\"transit\">\n        <div className='transit-on'>\n            <AnyStop title='Twenty Fourth Street BART' agency='BA' stopCode='24TH' filterIN={['YL-S', 'RD-S']} />\n            <AnyStop title='Millbrae BART' agency='BA' stopCode='MLBR' />\n            <AnyStop title='CalTrain MillBrae' agency='CT' stopCode='70062' />\n            <AnyStop title='CalTrain San Mateo' agency='CT' stopCode='70091' />\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default AA;\n","import React from 'react';\nimport AnyStop from './anyStop';\n\nfunction AA() {\n  return (\n    <div>\n      <div className=\"busemoji\">\n      </div>\n      <div className=\"transit\">\n        <div className='transit-on'>\n            <AnyStop agency='BA' stopCode='NBRK' />\n            <AnyStop agency='AC' stopCode='56144' />\n            <AnyStop agency='AC' stopCode='55327' />\n            <AnyStop agency='AC' stopCode='59600' />\n            <AnyStop agency='AC' stopCode='55165' />\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default AA;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport TransitStop from './components/transitstop';\nimport TransitHeader from './components/transitheader';\nimport Vehicular from './components/vehicular'\nimport AnyStop from './components/anyStop';\nimport AnyStopWildCard from './components/anyStopWildCard';\n\nimport AA from './components/aa';\nimport DA from './components/da';\n\nfunction App(props) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n      <div className=\"transit-master\">\n      <TransitHeader />\n      <div className=\"transit-switcher\">\n      <div className=\"transit\">\n      <Route exact path=\"/\">\n        <Redirect to=\"/anywherer\" />\n      </Route>\n        <Route exact path=\"/anywherer\" component={TransitStop} />\n        <Route exact path=\"/vehicular\" component={Vehicular} />\n        <Route exact path=\"/weekender\">\n            <AnyStop agency=\"GG\" stopCode=\"42006\" />\n            <AnyStop agency=\"GG\" stopCode=\"40032\" />\n        </Route>\n        <Route exact path=\"/commuter\">\n            <AnyStop agency=\"SF\" stopCode=\"16513\" filterOUT={['8','8BX']} />\n            <AnyStop agency=\"SF\" stopCode=\"16750\" filterIN={['45']} title=\"Across from Mario's\"/>\n            <AnyStop agency=\"SF\" stopCode=\"13082\" />\n        </Route>\n      \t<Route exact path=\"/multi\">\n            <AnyStop agency=\"SF\" stopCode=\"16513\" />\n            <AnyStop title='Twenty Fourth Street BART' agency='BA' stopCode='24TH' />\n            <AnyStop title='CalTrain MillBrae' agency='CT' stopCode='70062' />\n            <AnyStop agency=\"SF\" stopCode=\"16513\" />\n            \n        </Route>\n        <Route exact path=\"/aa\" component={AA} />\n        <Route exact path=\"/da\" component={DA} />\n        \n        <Route path=\"/anystop/:agency/:stopCode?\" render={(props) => <AnyStopWildCard {...props} /> }/>\n\n      \n\n    </div>\n    </div>\n    </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}