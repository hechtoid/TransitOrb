{"version":3,"sources":["components/bus.js","components/transitstop.js","components/transitheader.js","components/vehicular.js","components/anyStop.js","components/anyStopWildCard.js","components/aa.js","components/da.js","App.js","serviceWorker.js","index.js"],"names":["Bus","props","bus","MonitoredVehicleJourney","OperatorRef","className","id","LineRef","OriginName","DestinationName","MonitoredCall","ExpectedArrivalTime","Date","parse","AimedArrivalTime","toLocaleTimeString","Math","floor","caltrainLine","title","VehicleRef","to","pathname","state","vehicleNumber","agency","ExpectedDepartureTime","includes","TransitStop","selectID","e","target","select","loaded","stopCode","agencies","stopLists","stops","stopFilter","stopsFiltered","stop","Name","buss","loadBusss","bind","loadStops","updateStopFilter","agencyCodeLengthMap","axios","get","then","res","data","filter","WebSite","setState","this","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","currentTarget","value","Contents","dataObjects","ScheduledStopPoint","toUpperCase","length","searchTerms","toLowerCase","split","push","stopName","stoppCode","slow","key","map","Id","ShortName","locationLink","busss","onClick","StopPointName","Location","type","onChange","updateAgency","checked","onMouseDown","href","rel","disabled","updateStop","selected","hidden","placeholder","onFocus","updateStopCode","React","Component","withRouter","document","location","role","aria-label","src","alt","Vehicular","loadVehicle","updateVehicleNumber","handleSubmit","preventDefault","vehicle","Siri","VehicleMonitoringDelivery","VehicleActivity","gFrame","vehicleInfo","firstStop","futureStops","VehicleLocation","frameBorder","Latitude","Longitude","StopPointRef","OnwardCalls","OnwardCall","onSubmit","Monitored","AnyStop","filterIN","filterOUT","AnyStopWildCard","match","params","AA","App","basename","process","exact","path","component","render","DA","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7d287d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Bus(props) {\nif (props.bus.MonitoredVehicleJourney.OperatorRef === \"BA\") {\n    return (\n            <div className=\"bus\" id={props.bus.MonitoredVehicleJourney.LineRef}>\n                    <div className=\"bus-left\">\n                    <div>\n    <span>{props.bus.MonitoredVehicleJourney.OriginName}</span>\n    <span className=\"bold\"> => {props.bus.MonitoredVehicleJourney.DestinationName}</span>\n            </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n        ? <>\n        <span className=\"gray\">\n        {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n                </span>\n        <span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n                </span>\n        </> :\n        <span className=\"bold\">\n                {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n        </div>\n        <div className=\"countdown\">\n                <div className=\"min\">in</div>\n                {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n?<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime))-new Date()))/60000)}</div>\n:<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}               \n <div className=\"min\">min</div></div>\n    </div>\n    )} else if (props.bus.MonitoredVehicleJourney.OperatorRef === \"CT\") {\n        let caltrainLine = 'GY-N'\n        if (props.bus.MonitoredVehicleJourney.LineRef === 'Limited') {caltrainLine = 'YL-N'}\n        if (props.bus.MonitoredVehicleJourney.LineRef === 'Bullet') {caltrainLine = 'RD-N'}\n        return (\n        <div className=\"bus\" id={caltrainLine}>\n            <div className=\"bus-left\">\n            <div><span title=\"Track Vehicle\" className=\"bold\">\n        { props.bus.MonitoredVehicleJourney.VehicleRef\n        ? <Link className=\"gps\"\n                to={{\n                pathname: \"/vehicular\", \n                state: {\n        vehicleNumber: props.bus.MonitoredVehicleJourney.VehicleRef,\n        agency: props.bus.MonitoredVehicleJourney.OperatorRef\n                        }\n                }} >\n        {props.bus.MonitoredVehicleJourney.LineRef}<sup>GPS</sup>\n        </Link>\n        : <>{props.bus.MonitoredVehicleJourney.LineRef}</>\n        } => </span> \n                {props.bus.MonitoredVehicleJourney.DestinationName} \n                </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime && props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime !== props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime\n        ? <>\n        <span className=\"gray\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>\n<span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime)).toLocaleTimeString()}\n        </span>\n        </>\n        : <span className=\"bold\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n    </div>\n    <div className=\"countdown\">\n    <div className=\"min\">in</div>\n    {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime\n?<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedDepartureTime))-new Date()))/60000)}</div>\n:<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}    \n<div className=\"min\">min</div></div></div>\n    )} else if (['SF', 'AC', 'GG', 'SM', 'MA', 'SC'].includes(props.bus.MonitoredVehicleJourney.OperatorRef)){\n        return(\n        <div className=\"bus\"><div className=\"bus-left\">\n            <div><span title=\"Track Vehicle\" className=\"bold\">\n        { props.bus.MonitoredVehicleJourney.VehicleRef\n        ? <Link className=\"gps\"\n                to={{\n                pathname: \"/vehicular\", \n                state: {\n        vehicleNumber: props.bus.MonitoredVehicleJourney.VehicleRef,\n        agency: props.bus.MonitoredVehicleJourney.OperatorRef\n                        }\n                }} >\n        {props.bus.MonitoredVehicleJourney.LineRef}<sup>GPS</sup>\n        </Link>\n        : <>{props.bus.MonitoredVehicleJourney.LineRef}</>\n        } => </span> \n        {props.bus.MonitoredVehicleJourney.DestinationName} \n        </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n        ? <>\n        <span className=\"gray\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>\n<span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n        </span>\n        </>\n        : <span className=\"bold\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n    </div>\n    <div className=\"countdown\">\n    <div className=\"min\">in</div>\n{props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n?<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime))-new Date()))/60000)}</div>\n:<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}\n    <div className=\"min\">min</div></div>\n</div>\n    )} else {\n        return(\n        <div className=\"bus\"><div className=\"bus-left\">\n            <div><span className=\"bold\">\n{props.bus.MonitoredVehicleJourney.LineRef} => </span> \n{props.bus.MonitoredVehicleJourney.DestinationName} \n        </div>\n        {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n        ? <>\n        <span className=\"gray\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>\n<span className=\"bold\"> => {new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n        </span>\n        </>\n        : <span className=\"bold\">\n{new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n        </span>}\n    </div>\n    <div className=\"countdown\">\n    <div className=\"min\">in</div>\n    {props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime\n?<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime))-new Date()))/60000)}</div>\n:<div className=\"min-math\">{Math.floor(((new Date(Date.parse(props.bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}      \n<div className=\"min\">min</div></div>\n</div>\n    )}\n}\nexport default Bus;\n\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport Bus from './bus'\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            stopCode: 'EMBR',\n            agency: 'BA',\n            agencies: [],\n            stopLists: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stop: { Name: 'Embarcadero' },\n            buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this);\n        this.loadStops = this.loadStops.bind(this);\n        this.updateStopFilter = this.updateStopFilter.bind(this)\n        this.selectID = this.selectID.bind(this)\n        this.agencyCodeLengthMap = {\n            'AM': 3, 'PE': 3, 'VC': 3, \n            'BA': 4, 'EM': 4, 'SA': 4, \n            'AC': 5, 'CT': 5, 'CC': 5, \n            'DE': 5, 'FS': 5, 'GF': 5, \n            'GG': 5, 'MA': 5, 'RV': 5, \n            'SC': 5, 'SF': 5, 'SR': 5, \n            'UC': 5, 'VN': 5, 'WC': 5, \n            'SS': 6, 'WH': 6, 'SM': 6, \n            'ST': 6, 'TD': 6, '3D': 6, \n            'CE': 7, 'CM': 7, 'SO': 7\n        }\n    }\n    selectID = (e) => e.target.select();\n\n    componentDidMount() {\n        axios.get(`https://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            let agencies = res.data.filter(agency => !!agency.WebSite);\n            this.setState({ agencies });\n        })\n        this.loadBusss()\n    }\n    loadBusss(e, agency = this.state.agency, stopCode = this.state.stopCode) {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${agency}&stopCode=${stopCode}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    updateAgency() {\n        return e =>     {\n            let agency = e.currentTarget.value\n            let stops = []\n            let stop\n        if (this.state.stopLists[agency]) {\n            stops = this.state.stopLists[agency]\n            stop = stops[0]\n            this.setState({\n                stopFilter: '',\n                stopsFiltered: stops,\n                stopCode: stop.id,\n                buss: [],\n                loaded: true,\n                stop,\n                stops,\n                agency\n        })\n        this.loadBusss( e, agency, stop.id )\n    } else {\n        this.setState({\n            agency: e.currentTarget.value,\n            stop: {},\n            stops: [],\n            stopFilter: '',\n            stopsFiltered: [],\n            stopCode: '',\n            buss: [],\n            loaded: false\n            })\n            }\n        }\n    }    \n    loadStops(e) {\n        this.setState({ loaded: true })\n        axios.get(`https://api.511.org/transit/stops?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&operator_id=${this.state.agency}`)\n            .then(res => {\n                if (this.state.agency === \"BA\") {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint.filter(stop => !stop.id.includes('place') && !stop.Name.includes('Enter/Exit :'))\n                    let stopCode = this.state.stopCode || 'EMBR'\n                    let stop = stops.filter(stop => stop.id === stopCode.toUpperCase())[0] || stops.filter(stop => stop.id === 'EMBR')[0]\n                    this.setState({\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists: {'BA': stops},\n                        stopCode: stop.id,\n                        stops,\n                        stop\n                    });\n                    this.loadBusss( e, this.state.agency, stop.id )\n                }\n                else {\n                    let stops = res.data.Contents.dataObjects.ScheduledStopPoint;\n                    let stop = stops.filter(stop => stop.id === this.state.stopCode.toUpperCase())[0] || stops[0]\n                    let stopLists = this.state.stopLists\n                    stopLists[this.state.agency] = stops\n                    this.setState({\n                        stopCode: stop.id,\n                        stopFilter: '',\n                        stopsFiltered: stops,\n                        stopLists,\n                        stops,\n                        stop\n                    });\n                    this.loadBusss( e, this.state.agency, stop.id )\n                }\n            })\n    }    \n    updateStop() {\n        return e => {\n            let stop = this.state.stopsFiltered[e.currentTarget.value]\n                this.setState({\n                    stopCode: stop.id,\n                    stop\n                })\n            this.loadBusss( e, this.state.agency, stop.id )\n        }\n    }\n    updateStopFilter() {\n        return e => {\n            let stopFilter = e.currentTarget.value\n            if (stopFilter.length === 1) {\n                this.setState({\n                    stopsFiltered: this.state.stops,\n                })\n            }\n            if (stopFilter.length < 3) {\n                this.setState({\n                    stopFilter\n                })\n            }\n            else if (stopFilter.length <= this.state.stopFilter.length) {\n                let stopsFiltered = this.state.stops\n                this.setState({\n                    stopFilter,\n                    stopsFiltered\n                })\n            }\n            else if (stopFilter.length >= 3) {\n                this.setState({ stopFilter })\n                let searchTerms = stopFilter.toLowerCase().split(\" \")\n                searchTerms.push(\"\")\n                searchTerms.push(\"\")\n                searchTerms.push(\"\")\n                let stopsFiltered = this.state.stopsFiltered.filter(stop => {\n                    let stopName = stop.Name.toLowerCase()\n                    if (stopName.includes(searchTerms[0]) \n                    && stopName.includes(searchTerms[1]) \n                    && stopName.includes(searchTerms[2]) \n                    && stopName.includes(searchTerms[3]))\n                    {return true} else {return false}\n                })\n                this.setState({ stopsFiltered })\n                if (stopsFiltered[0]) {\n                    let stop = stopsFiltered[0]\n                    if (this.state.stopCode !== stop.id) {\n                        this.setState({\n                            stopCode: stop.id,\n                            stop\n                        })\n                        this.loadBusss( e, this.state.agency, stop.id )\n                    }\n                }\n            }\n        }\n    }\n    updateStopCode() {\n        return e => {\n            let stopCode = e.currentTarget.value\n            let stoppCode = stopCode.toUpperCase()\n            if (stopCode.length <= this.agencyCodeLengthMap[this.state.agency]) {\n            this.setState({\n                stopCode\n            })}\n            if (stopCode.length === this.agencyCodeLengthMap[this.state.agency]) {\n            let stop = this.state.stops.filter(stop => stop.id.toUpperCase() === stoppCode)[0]\n                if (stop) {\n                    this.setState({\n                        stopsFiltered: this.state.stops,\n                        stopFilter: '',\n                        stopCode: stoppCode,\n                        stop\n                    })\n                } else {\n                    this.setState({\n                        stop: {},\n                    })\n                }\n                axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${stoppCode}`)\n                .then(res => {\n                    let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({  buss })\n                    if (buss[0]) {this.setState({ stopCode: stoppCode })}\n                })         \n            }\n        }\n    }\n    render() {\n        let slow\n            if (this.state.loaded && !this.state.stops[0]) {\n                slow = <div><span>Muni and the VTA have <span className=\"stops-number\">~3500</span> stops,</span><br></br><span>ACTransit more than <span className=\"stops-number\">5000</span>.</span></div>\n            }\n            else if (this.state.loaded && this.state.stops[0] && this.state.stopFilter) {\n                slow = <div>\n                        Loaded <span className=\"stops-number\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                            {this.state.stopsFiltered.length===this.state.stops.length\n                            ?''\n                            :<><span className=\"stops-number\">{this.state.stopsFiltered.length}</span> in Filter.</>\n                            }\n                    </div>\n            }\n            else if (this.state.loaded && this.state.stops[0]) {\n                slow = <div>\n                        Loaded <span className=\"stops-number\">\n                        {this.state.stops.length}\n                        </span> stops.<br></br>\n                    </div>\n            }\n\n        let agencies\n        if (this.state.agencies) {\n            let key = 0\n            agencies = this.state.agencies.map(agency => {\n                return (\n                        <option value={agency.Id} key={key++}>\n                            {agency.ShortName\n                            ? agency.ShortName\n                            : agency.Name} {\n                            agency.ShortName && agency.ShortName !== agency.Name\n                            ? `(${agency.Name})`\n                            : ''}\n                         </option>\n                )\n            })\n        }\n        let stops\n        if (this.state.stopsFiltered) {\n            let key = 0\n            stops = this.state.stopsFiltered.map(stop => {\n                return (\n                        <option key={key} value={key++}>\n                            {stop.Name} ({stop.id})\n                        </option>\n                )\n            })\n        }\n        let stopName = ''\n        let busss = <div className=\"bust\">\n                No Tracked Vehicles.\n                <br></br>\n                <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n            </div>\n        if (this.state.buss[0]) {\n            stopName = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0\n            busss = this.state.buss.map(bus => { \n                return <Bus bus={bus} key={key++} /> \n            })\n        }\n        let locationLink\n        if (this.state.stopCode){\n            locationLink = \n            <Link \n            to={`/anystop/${this.state.agency}/${this.state.stopCode}`}>\n                <div className=\"map-link\">\n                    View Stop\n                </div>\n            </Link>}\n        if (this.state.stop.Location){\n            let stop = this.state.stop\n            locationLink = \n            <Link \n            to={{\n                pathname: `/anystop/${this.state.agency}/${this.state.stopCode}`,\n                state: {\n                    stop\n                }\n            }}>\n                <div className=\"map-link\">\n                    View Stop\n                </div>\n            </Link>\n        }\n        return (\n            <div className=\"transit-stop\">\n                <div className=\"agency-upper\">\n                <div className=\"radios\">\n            <div className=\"short-title\">Agency ShortList:</div>\n                <div className=\"radio-one\">\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"SF\"} \n                        value=\"SF\" />SF</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"GG\"} \n                        value=\"GG\" />GG</label>\n                    <label>&nbsp;&nbsp;&nbsp;<input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency === \"BA\"} \n                        value=\"BA\" />Bart</label>\n                </div>\n                <div className=\"radio-two\">\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"AC\"} \n                        value=\"AC\" />AC</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency === \"SM\"} \n                        value=\"SM\" />Sam</label>\n                    <label><input type=\"radio\" \n                        onChange={this.updateAgency()} \n                        checked={this.state.agency===\"MA\"} \n                        value=\"MA\" />Marin</label>\n                </div>\n                </div>\n            <span className=\"agency-code\">{this.state.agency}</span>\n\t\t    </div>\n            <div className=\"agencies-string\">\n                All {this.state.agencies.length} Transit Agencies:\n                </div>\n            <div className=\"agency\">\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                    onMouseDown={this.updateAgency()}\n                >\n                    {agencies}\n                </select>\n                <div className=\"politics\">\n(too many? i agree! <a href=\"https://www.seamlessbayarea.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\nSeamless Bay Area</a>)\n            </div>\n            </div>\n            <hr></hr>\n            <div className=\"slow\">\n            {!this.state.loaded\n            ? <button className=\"load-stops\" onClick={this.loadStops}>Load Stops</button>\n            : this.state.stops[0]\n            ?  <button disabled className=\"stop-loads\" >Loaded</button>\n            : <button disabled className=\"stop-loading\" >Loading</button>\n            }\n                {slow}\n            </div>\n                <select\n                disabled={!this.state.stopsFiltered[0]}\n                className=\"stop-select\"\n                onChange={this.updateStop()}\n                >\n                    {this.state.stop.id\n                    ? <option selected disabled hidden value='0'>{this.state.stop.Name} ({this.state.stop.id})</option>\n                    :''}\n                    {this.state.stop.id}\n                {stops}\n            </select>\n            <br></br>\n                <input type=\"text\"\n                    value={this.state.stopFilter}\n                    className=\"stop-filter\"\n                    onChange={this.updateStopFilter()}\n                    disabled={!this.state.loaded}\n                    placeholder={this.state.loaded?\"Type to Search\":\"Load Stops to Search\"}\n                    //onPaste={}\n                />\n                <br></br>\n            <div className=\"stop-info\">\n                <div className=\"stop-title\" onClick={this.loadBusss}>\n                { this.state.stop.Name\n                ? this.state.stop.Name\n                : stopName }\n                <div>Tap to ReFresh</div>\n                </div>\n                <div>\n            <input type={this.state.agency !=='BA'?\"number\":\"text\"}\n                    id=\"stop-id\"\n                    placeholder=\"Stop Code\"\n                    value={this.state.stopCode}\n                    onFocus={this.selectID}\n                    onChange={this.updateStopCode()}\n                />\n                <br></br>\n                { locationLink }\n                </div>\n\n\t\t    </div>\n            { busss }\n        </div>\n        );\n    }\n}\nexport default TransitStop;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nfunction TransitHeader(props) {\n  document.title=`transitYourself//${props.location.pathname}`\n  return (\n    <div className=\"transit-header\">\n      <Link to= \"/vehicular\" >\n        <div id=\"busemoji\" className={\n          props.location.pathname === '/vehicular'\n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>\n<span title=\"Vehicular\" role=\"img\" aria-label=\"bus emoji\">🚌</span>\n        </div>\n      </Link>\n      <Link to=\"/weekender\">\n        <div id='marin' title=\"Weekender\" className={\n          props.location.pathname === '/weekender' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>Weekender</div>\n      </Link>\n      <Link to= \"/commuter\" >\n        <div title=\"Commuter\" className={\n          props.location.pathname === '/commuter' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>Commuter</div>\n      </Link>\n      <Link to=\"/anywherer\">\n        <div title=\"Anywherer\" className={\n          props.location.pathname === '/anywherer' \n          ? 'transit-switch-on' \n          : 'transit-switch-off'\n        }>Anywherer</div>\n      </Link>\n      <div className=\"five-eleven\">\n  <a href=\"https://511.org/open-data/transit\" title=\"Powered by 511 Open Data\" target=\"_blank\" rel=\"noopener noreferrer\">\n  <img className=\"five-eleven\" src=\"https://proxy-prod.511.org/assets/img/branding/511_original_web.png\" alt=\"511 logo\"></img>\n      </a>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(TransitHeader);\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Vehicular extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.location.state || {vehicleNumber: '', agency: 'SF'}\n    \n        this.loadVehicle = this.loadVehicle.bind(this)\n        this.updateVehicleNumber = this.updateVehicleNumber.bind(this)\n        this.updateAgency = this.updateAgency.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.selectID = this.selectID.bind(this)\n    }\n    selectID = (e) => e.target.select();\n\n    componentDidMount() {\n        this.loadVehicle()\n    }\n    handleSubmit(e){\n        e.preventDefault()\n        this.loadVehicle()\n    }\n    loadVehicle() { \n        let vehicle = {}\n        let agency = this.state.agency.toUpperCase()\n        axios.get(`https://api.511.org/transit/VehicleMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&agency=${agency}&format=json&vehicleID=${this.state.vehicleNumber}`)\n            .then(res => {\n                vehicle = res.data.Siri.ServiceDelivery.VehicleMonitoringDelivery.VehicleActivity\n                ? res.data.Siri.ServiceDelivery.VehicleMonitoringDelivery.VehicleActivity[0].MonitoredVehicleJourney\n                : {}\n                this.setState({ vehicle });\n            })\n    }\n\n    updateVehicleNumber(e) {\n        return e => {\n            let vehicleNumber = e.currentTarget.value\n            this.setState({\n                vehicleNumber\n            })\n        }\n    }\n    updateAgency(e) {\n        return e => {\n            let agency = e.currentTarget.value\n            if (agency.length <= 2){\n            this.setState({\n                agency\n            })}\n        }\n    }\n    render() {\n            let vehicleInfo = <div className=\"vehicle-info\">No Tracked Vehicle</div>\n            let firstStop = ''\n            let futureStops = <div className=\"future-stops\">No Future Stops</div>\n            let key = 0\n            let gFrame\n            if (this.state.vehicle && this.state.vehicle.VehicleLocation) { \n                gFrame = <iframe title=\"gFrame\" frameBorder=\"1\"\nsrc={`https://www.google.com/maps/embed/v1/place?zoom=14&q=${this.state.vehicle.VehicleLocation.Latitude},${this.state.vehicle.VehicleLocation.Longitude}&key=AIzaSyAIe8CQdaU5qYMgUBimNtNLtz6MKhODsNU`}>Loading Map...</iframe> \n            }\n            if (this.state.vehicle && this.state.vehicle.MonitoredCall) {\n                vehicleInfo =\n                        <div className=\"vehicle-info\">\n                      Route <span className=\"bold\">\n                            {this.state.vehicle.LineRef}\n                        </span> to <span className=\"bold\">\n                            {this.state.vehicle.DestinationName}\n                        </span>\n                        </div>\n                firstStop =  \n                      <div className=\"stop\" >\n                      <div className=\"stop-top\">\n                      <div>\n                       <span>\n                          {this.state.vehicle.MonitoredCall.StopPointName}\n                      </span>\n                      <br></br>\n                      <span className=\"gray\">\n                          {new Date(Date.parse(this.state.vehicle.MonitoredCall.AimedArrivalTime)).toLocaleTimeString()}\n                          </span>\n                      <span className=\"bold\"> => {new Date(Date.parse(this.state.vehicle.MonitoredCall.ExpectedArrivalTime)).toLocaleTimeString()}\n                          </span>\n                          <Link \n                      to={`/anystop/${this.state.agency}/${this.state.vehicle.MonitoredCall.StopPointRef}`}>\n                      <div className=\"map-link\">\n                          Stop #{this.state.vehicle.MonitoredCall.StopPointRef}\n                          </div>\n                      </Link>\n                          </div>\n                          <div className=\"countdown\">\n          <div className=\"min\">in</div>\n          {this.state.vehicle.MonitoredCall.ExpectedArrivalTime\n?<div className=\"min-math\">{Math.floor(((new Date(Date.parse(this.state.vehicle.MonitoredCall.ExpectedArrivalTime))-new Date()))/60000)}</div>\n:<div className=\"min-math\">{Math.floor(((new Date(Date.parse(this.state.vehicle.MonitoredCall.AimedArrivalTime))-new Date()))/60000)}</div>}               \n<div className=\"min\">min</div></div>\n                          </div>\n                          \n                  </div>\n            }\n            if (this.state.vehicle && this.state.vehicle.OnwardCalls && this.state.vehicle.OnwardCalls.OnwardCall[0]) {\n                futureStops = <div className=\"future-stops\">\n                        {firstStop}\n                        {this.state.vehicle.OnwardCalls.OnwardCall.map(stop => {\n                            return (\n                        <div className=\"stop\" key={key++}>\n                            <div className=\"stop-top\">\n                            <div>\n                             <span>\n                                {stop.StopPointName}\n                            </span>\n                            <br></br>\n                            <span className=\"gray\">\n                                {new Date(Date.parse(stop.AimedArrivalTime)).toLocaleTimeString()}\n                                </span>\n                            <span className=\"bold\"> => {new Date(Date.parse(stop.ExpectedArrivalTime)).toLocaleTimeString()}\n                                </span>\n                                <Link \n                            to={`/anystop/${this.state.agency}/${stop.StopPointRef}`}>\n                            <div className=\"map-link\">\n                                Stop #{stop.StopPointRef}\n                                </div>\n                            </Link>\n                                </div>\n                                <div className=\"countdown\">\n                <div className=\"min\">in</div>\n                {stop.ExpectedArrivalTime\n?<div className=\"min-math\">{Math.floor(((new Date(Date.parse(stop.ExpectedArrivalTime))-new Date()))/60000)}</div>\n:<div className=\"min-math\">{Math.floor(((new Date(Date.parse(stop.AimedArrivalTime))-new Date()))/60000)}</div>}               \n <div className=\"min\">min</div>\n                                </div>\n                                </div>\n                                \n                        </div>\n                                )\n                            })\n                        }\n                        </div>\n            }\n        return (\n            <div className=\"vehicular\">\n                <div className=\"short-title\">\n                    Live Tracking - Vehicle {\n                             this.state.vehicle\n                            ? this.state.vehicle.VehicleRef\n                            : this.state.vehicleNumber\n                        }\n                    </div>             \n                    {vehicleInfo}\n                <form onSubmit={this.handleSubmit}>\n                <input type=\"text\"\n                    id=\"vehicle-agency\"\n                    placeholder=\"Agency\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                    />\n                 <input type=\"number\"\n                    id=\"vehicle-number\"\n                    placeholder=\"Vehicle #\"\n                    value={this.state.vehicleNumber}\n                    onFocus={this.selectID}\n                    onChange={this.updateVehicleNumber()}\n                    />\n                {this.state.vehicle && this.state.vehicle.Monitored\n                ?<input type=\"submit\" value=\"ReLoad\" />\n                :<input type=\"submit\" value=\"Load\" />}\n                <br></br>\n                     <a href=\"https://www.sfmta.com/getting-around/muni/muni-feedback\" className=\"vehicular-feedback\" target=\"_blank\" rel=\"noopener noreferrer\">\n                SFMUNI Vehicle Numbers</a>\n            </form>\n            <div className='g-frame'>\n            {gFrame}\n            </div> \n            {futureStops}\n            </div>\n        );\n    }\n}\nexport default Vehicular;\n","import React from 'react';\nimport axios from 'axios';\nimport Bus from './bus'\n\nclass AnyStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadBusss()\n    }\n    loadBusss() {\n        // if (this.props.agency === 'SB' || this.props.agency === 'GF') {\n        //     axios.get(`https://api.511.org/transit/stoptimetable?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&OperatorRef=${this.props.agency}&MonitoringRef=${this.props.stop}`)\n        //     .then(res => {\n        //         let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n        //         this.setState({ buss });\n        //     })\n        // } else \n        {\n        axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.props.agency}&stopCode=${this.props.stop}`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                if (this.props.filterIN){buss = buss.filter( bus => this.props.filterIN.includes(bus.MonitoredVehicleJourney.LineRef))} \n                if (this.props.filterOUT){buss = buss.filter( bus => !this.props.filterOUT.includes(bus.MonitoredVehicleJourney.LineRef))}\n                this.setState({ buss });\n            })\n        }\n    }\n\n    render() {\n        let busss = <div className=\"bust\">\n            No Tracked Vehicles to show. \n            <br></br>\n            <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n        </div>\n        let stopName\n        if (this.state.buss[0]){\n            stopName = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                return <Bus bus={bus} key={key++} /> \n            })   \n        }\n        return (\n            <div className=\"buss\">\n                 {this.props.title \n                ? this.props.title\n                : stopName}\n                <br></br>\n                {busss}\n            </div>\n        );\n    }\n}\nexport default AnyStop;","import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Bus from './bus';\n\nclass AnyStopWildCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.loadBusss = this.loadBusss.bind(this);\n    }\n\n    componentDidMount() {\n       this.loadBusss()\n    }\n    loadBusss (e) {\n // if (this.props.match.params.agency.toUpperCase() === 'SB' || this.props.match.params.agency.toUpperCase() === 'GF') {\n        //     axios.get(`https://api.511.org/transit/stoptimetable?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&OperatorRef=${this.props.match.params.agency.toUpperCase()}&MonitoringRef=${this.props.match.params.stop.toUpperCase()}`)\n        //     .then(res => {\n        //         console.log(res)\n        //         let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n        //         this.setState({ buss });\n        //     })\n        // } else \n        {\n            axios.get(`https://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.props.match.params.agency.toUpperCase()}&stopCode=${this.props.match.params.stop.toUpperCase()}`)\n                .then(res => {\n                    let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                    this.setState({ buss });\n                })\n            }\n    }\n    render() {\n        let busss = <div className=\"bust\">\n            No Tracked Vehicles to show. \n            <br></br>\n            <span className='update' onClick={this.loadBusss}>Check again</span>, check your inputs, or check the schedule.\n        </div>\n        let stop\n        if (this.state.buss[0]){\n            stop = this.state.buss[0].MonitoredVehicleJourney.MonitoredCall.StopPointName\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                return <Bus bus={bus} key={key++} />\n            })   \n        }\n        if (this.props.location.state){stop = this.props.location.state.stop.Name || stop }\n        let gFrame\n        if (this.props.location.state && this.props.location.state.stop.Location) { \n            gFrame = <iframe title=\"gFrame\" frameBorder=\"1\"\nsrc={`https://www.google.com/maps/embed/v1/place?zoom=13&q=${this.props.location.state.stop.Location.Latitude},${this.props.location.state.stop.Location.Longitude}&key=AIzaSyAIe8CQdaU5qYMgUBimNtNLtz6MKhODsNU`}>Loading Map...</iframe> \n        }\n        return (\n        <div className='transit-on'>\n            <div className=\"any-stop-wild-card\">\n            <div className='short-title'>\n        {this.props.match.params.agency.toUpperCase()}#{this.props.match.params.stop.toUpperCase()}\n            </div>\n            <div className=\"stop-title\" onClick={this.loadBusss}>\n                { stop }\n                <div>Tap to ReFresh</div>\n                </div>\n                    {gFrame}\n                <div className=\"buss\">\n             \n                    {busss}\n            </div>\n        </div>\n        </div>\n       \n        );\n    }\n\n}\nexport default withRouter(AnyStopWildCard);","import React from 'react';\nimport AnyStop from './anyStop';\n\nfunction AA() {\n  return (\n    <div>\n      <div className=\"busemoji\">\n      </div>\n      <div className=\"transit\">\n        <div className='transit-on'>\n            <AnyStop title='Twenty Fourth Street BART' agency='BA' stop='24TH' filterIN={['YL-S', 'RD-S']} />\n            <AnyStop title='Millbrae BART' agency='BA' stop='MLBR' />\n            <AnyStop title='CalTrain MillBrae' agency='CT' stop='70062' />\n            <AnyStop title='CalTrain San Mateo' agency='CT' stop='70091' />\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default AA;\n","import React from 'react';\nimport AnyStop from './anyStop';\n\nfunction AA() {\n  return (\n    <div>\n      <div className=\"busemoji\">\n      </div>\n      <div className=\"transit\">\n        <div className='transit-on'>\n            <AnyStop agency='BA' stop='NBRK' />\n            <AnyStop agency='AC' stop='56144' />\n            <AnyStop agency='AC' stop='55327' />\n            <AnyStop agency='AC' stop='59600' />\n            <AnyStop agency='AC' stop='55165' />\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default AA;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport TransitStop from './components/transitstop';\nimport TransitHeader from './components/transitheader';\nimport Vehicular from './components/vehicular'\nimport AnyStop from './components/anyStop';\nimport AnyStopWildCard from './components/anyStopWildCard';\n\nimport AA from './components/aa';\nimport DA from './components/da';\n\nfunction App(props) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n      <div className=\"transit-master\">\n      <TransitHeader />\n      <div className=\"transit-switcher\">\n      <div className=\"transit\">\n      <Route exact path=\"/\">\n        <Redirect to=\"/anywherer\" />\n      </Route>\n        <Route exact path=\"/anywherer\" component={TransitStop} />\n        <Route exact path=\"/vehicular\" component={Vehicular} />\n        <Route exact path=\"/weekender\">\n            <AnyStop agency=\"GG\" stop=\"42006\" />\n            <AnyStop agency=\"GG\" stop=\"40032\" />\n        </Route>\n        <Route exact path=\"/commuter\">\n            <AnyStop agency=\"SF\" stop=\"16513\" filterOUT={['8','8BX']} />\n            <AnyStop agency=\"SF\" stop=\"16750\" filterIN={['45']} title=\"Across from Mario's\"/>\n            <AnyStop agency=\"SF\" stop=\"13082\" />\n        </Route>\n\n        <Route path=\"/anystop/:agency/:stop\" render={(props) => (\n        <AnyStopWildCard {...props} /> )}\n      />\n        <Route exact path=\"/aa\" component={AA} />\n        <Route exact path=\"/da\" component={DA} />\n\n    </div>\n    </div>\n    </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}